{"version":3,"file":"static/js/897.2066e457.chunk.js","mappings":"yRAEaA,EAAWC,EAAAA,EAAAA,IAAH,8TAcRC,EAAeD,EAAAA,EAAAA,IAAH,6G,UCXnBE,EAAYC,SAASC,cAAc,eAE5BC,EAAQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UAC/BC,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,EACvC,CACF,IAED,IAAMA,EAAgB,SAAAE,GACL,WAAXA,EAAEC,MACJR,GAEH,EAQD,OAAOS,EAAAA,EAAAA,eACL,SAAChB,EAAD,CAAUiB,QAPgB,SAAAH,GACtBA,EAAEI,SAAWJ,EAAEK,eACjBZ,GAEH,EAGC,UACE,SAACL,EAAD,UAAeM,MAEjBL,EAEH,ECjCc,SAASiB,EAAT,GAA0B,IAAVb,EAAS,EAATA,QAC3B,OACI,iCACA,mCACA,mBAAQc,KAAK,SAASJ,QAASV,EAA/B,2BAGP,CCFD,IA0CA,EA1CgB,WACd,MCJsB,WAA2B,IAA1Be,EAAyB,wDAChD,GAAsCC,EAAAA,EAAAA,UAASD,GAA/C,eAAOE,EAAP,KAAoBC,EAApB,KAQA,OAPAhB,EAAAA,EAAAA,YAAU,WACJe,IACFpB,SAASsB,KAAKC,MAAMC,SAAW,SAElC,GAAE,CAACJ,IAGG,CAAEA,YAAAA,EAAaK,UAFJ,kBAAMJ,GAAe,EAArB,EAEeK,WADd,kBAAML,GAAe,EAArB,EAEpB,CDNgDM,GAAvCP,EAAR,EAAQA,YAAaM,EAArB,EAAqBA,WAAYD,EAAjC,EAAiCA,UACjC,OACE,iBACEF,MAAO,CACLK,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,WARX,WAWE,iBACEX,MAAO,CACLM,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZG,IAAK,GACLF,SAAU,QAPd,WAUE,gBAAKG,IAAKC,EAAQC,IAAI,UACtB,wJAKF,mBAAQrB,KAAK,SAASJ,QAASY,EAA/B,uBAGCL,IACC,SAAClB,EAAD,CAAOC,QAASuB,EAAhB,UACE,SAACV,EAAD,CAAMb,QAASuB,QAKxB,C","sources":["components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Test.js","pages/Welcome.js","hooks/useModal.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(0, 0, 0, 0.8);\n        z-index: 2;\n        overflow: hidden;   \n`;\n\nexport const ModalContent = styled.div`\n          max-width: calc(100vw - 48px);\n          max-height: calc(100vh - 24px);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Backdrop, ModalContent } from './Modal.styled.js';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","export default function Test({ onClose}){\n    return (\n        <>\n        <h1>Hello</h1>\n        <button type=\"button\" onClick={onClose}>Close Modal</button>\n        </>\n    )\n}","import hero1x from '../img/welcome-img-1x.png';\nimport { useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport Test from 'components/Test';\n\nconst Welcome = () => {\n  const { isModalOpen, closeModal, openModal } = useModal();\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 60,\n        color: '#010101',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: 20,\n          fontSize: '14px',\n        }}\n      >\n        <img src={hero1x} alt=\"hero\" />\n        <p>\n          Supercharge your productivity and take control of your tasks with Task\n          Pro - Don't wait, start achieving your goals now!\n        </p>\n      </div>\n      <button type=\"button\" onClick={openModal}>\n        showModal\n      </button>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <Test onClose={closeModal} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Welcome;\n","import { useState, useEffect } from 'react';\n\nexport const useModal = (initialState = false) => {\n  const [isModalOpen, setIsModalOpen] = useState(initialState);\n  useEffect(() => {\n    if (isModalOpen) {\n      document.body.style.overflow = 'hidden';\n    }\n  }, [isModalOpen]);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  return { isModalOpen, openModal, closeModal };\n};\n"],"names":["Backdrop","styled","ModalContent","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","target","currentTarget","Test","type","initialState","useState","isModalOpen","setIsModalOpen","body","style","overflow","openModal","closeModal","useModal","height","display","flexDirection","justifyContent","alignItems","fontSize","color","gap","src","hero1x","alt"],"sourceRoot":""}