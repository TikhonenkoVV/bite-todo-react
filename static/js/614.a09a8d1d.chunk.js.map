{"version":3,"file":"static/js/614.a09a8d1d.chunk.js","mappings":"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","sources":["components/MainDashboard/ColumnForm.styled.js","components/MainDashboard/ColumnForm.jsx","components/MainDashboard/Column.styled.js","components/Card/CardList.styled.js","components/Card/Card.styled.js","components/AddTaskForm/AddTaskForm.styled.js","components/AddTaskForm/TaskForm.jsx","components/AddTaskForm/EditTaskForm.jsx","components/Card/Card.jsx","store/filter/selectors.js","components/Card/CardList.jsx","components/AddTaskForm/AddTaskForm.jsx","components/MainDashboard/Column.jsx","components/MainDashboard/ColunmList.styled.js","components/MainDashboard/ColunmList.jsx","components/MainDashboard/CreateBoard.styled.js","components/MainDashboard/CreateBoard.jsx","pages/MainDashboard/MainDashboard.styled.js","components/StatusFilterButton/StatusFilterButton.styled.js","components/StatusFilterButton/StatusFilterButton.jsx","components/StatusFilter/StatusFilter.styled.js","components/StatusFilter/StatusFilter.jsx","components/DashboardHeader/DashboardHeader.styled.js","components/DashboardHeader/DashboardHeader.jsx","pages/MainDashboard/MainDashboard.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { baseTransition } from 'styles';\n\nexport const FormTitle = styled.p`\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  color: ${props => props.theme.colors.formTitleColor};\n`;\n\nexport const FormInput = styled(Field)`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  font-size: 14px;\n  font-weight: 400;\n  color: ${props => props.theme.colors.formInputColor};\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: ${props => props.theme.colors.formInputBackground};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.formInputBorderColor};\n  opacity: 0.4;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    outline: none;\n  }\n\n  transition: background ${baseTransition};\n`;\n\nexport const ValidationError = styled.p`\n  margin-top: 6px;\n  color: #ed4337;\n  font-size: 12px;\n`;\n\nexport const TitleContainer = styled.div`\n  margin-bottom: 24px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { addColumn, editColumn } from '../../store/columns/operations';\nimport * as Yup from 'yup';\n\nimport {\n  FormTitle,\n  FormInput,\n  ValidationError,\n  TitleContainer,\n} from './ColumnForm.styled';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'store/columns/selectors';\nimport { ButtonCloseModal } from 'components/miniComponents/ButtonCloseModal/ButtonCloseModal';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton';\nimport { IconAddEditDeleteModal } from 'components/miniComponents/IconAddEditDeleteModal/IconAddEditDeleteModal';\nimport { ModalContent } from 'components/Modal/Modal.styled';\n\nconst ColumnFormSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Please write more than 2 symbol!')\n    .max(32, 'Please write less than 32 symbols!')\n    .required('Required'),\n});\n\nexport const ColumnForm = ({\n  id,\n  boardId,\n  isEditMode,\n  onCloseForm,\n  columnTitle = '',\n}) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const index = columns.length;\n  const title = isEditMode ? 'Edit column' : 'Add column';\n  const buttonText = isEditMode ? 'Edit' : 'Add';\n  const icon = isEditMode ? 'pencil' : 'plus';\n\n  const handleSubmit = ({ title }, { resetForm }) => {\n    if (isEditMode) {\n      dispatch(editColumn({ boardId, id, title, index }));\n    } else {\n      dispatch(addColumn({ boardId, title, index }));\n    }\n    resetForm();\n    onCloseForm();\n  };\n\n  return (\n    <ModalContent>\n      <ButtonCloseModal onClose={onCloseForm} />\n      <FormTitle>{title}</FormTitle>\n      <Formik\n        initialValues={{\n          title: columnTitle,\n        }}\n        validationSchema={ColumnFormSchema}\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <TitleContainer>\n              <FormInput id=\"title\" name=\"title\" placeholder=\"Title\" />\n              {errors.title && touched.title ? (\n                <ValidationError>{errors.title}</ValidationError>\n              ) : null}\n            </TitleContainer>\n            <PrimaryButton type=\"submit\" title={buttonText}>\n              <IconAddEditDeleteModal icon={icon} />\n            </PrimaryButton>\n          </Form>\n        )}\n      </Formik>\n    </ModalContent>\n  );\n};\n","import styled from '@emotion/styled';\nimport { baseTransition } from 'styles';\n\nexport const ColumnContainer = styled.div`\n  max-width: 335px;\n`;\n\nexport const ColumnTitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n  padding: 18px 20px 17px 20px;\n  height: 56px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.card};\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.titleColor};\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 40px;\n  height: 16px;\n`;\n\nexport const TitleIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: ${props => props.theme.colors.iconFill};\n  transition: fill ${baseTransition};\n  &:hover,\n  &:focus {\n    fill: ${props => props.theme.colors.iconHover};\n  }\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from '@emotion/styled';\nimport { devices } from 'styles';\n\nexport const CardListContainer = styled.div`\n  max-height: calc(100svh - 336px);\n  height: 100%;\n  min-width: 350px;\n  margin-bottom: 14px;\n\n  @media screen and (${devices.tablet}) {\n    max-height: calc(100svh - 356px);\n  }\n\n  @media screen and (${devices.desktop}) {\n    max-height: calc(100vh - 293px);\n  }\n`;\n\nexport const CardListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 335px;\n  min-height: 100%;\n`;\n\nexport const TrackVertical = styled.div`\n  background-color: ${props =>\n    props.theme.colors.columnTrackVerticalBackground};\n  right: 0;\n  bottom: 0;\n  top: 2px;\n  border-radius: 12px;\n  width: 8px !important;\n`;\n\nexport const ThumbVertical = styled.div`\n  border-radius: 12px;\n  background-color: ${props =>\n    props.theme.colors.columnThumbVerticalBackground};\n`;\n","import styled from '@emotion/styled';\nimport { priority } from 'styles';\nimport { baseTransition } from 'styles';\n\nexport const CardStyled = styled.li`\n  position: relative;\n  height: 154px;\n  width: 100%;\n  padding: 14px 24px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.card};\n  overflow: hidden;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 4px;\n    height: 100%;\n    background-color: ${props => priority[props.color]};\n  }\n`;\n\nexport const CardTitleStyled = styled.h3`\n  margin-bottom: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  font-weight: 600;\n  color: ${props => props.theme.colors.cardMajorText};\n`;\n\nexport const CardDescriptionStyled = styled.p`\n  width: 290px;\n  height: 2rem;\n  margin-bottom: 34px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.3333;\n  color: ${props => props.theme.colors.cardMinorText};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nexport const CardFooter = styled.div`\n  position: relative;\n  display: flex;\n  align-items: flex-end;\n  &::before {\n    content: '';\n    position: absolute;\n    top: -14px;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${props => props.theme.colors.cardDecor};\n    z-index: 1;\n  }\n`;\n\nexport const CardParamsWrapper = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const CardParamsTitle = styled.p`\n  margin-bottom: 4px;\n  font-size: 8px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMinorText};\n`;\n\nexport const PriorityStatus = styled.p`\n  position: relative;\n  margin-left: 16px;\n  text-transform: capitalize;\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMajorText};\n  &::before {\n    content: '';\n    position: absolute;\n    top: 1.5px;\n    left: -16px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${props => priority[props.color]};\n  }\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMajorText};\n`;\n\nexport const ToolsWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const ToolsButtonBell = styled.button`\n  position: relative;\n  width: 16px;\n  height: 16px;\n  margin-left: auto;\n  margin-right: 12px;\n  color: #888888;\n  cursor: auto;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 30px;\n    transform: translate(-50%, -50%);\n    background-image: ${props =>\n      props.pastDeadline\n        ? 'radial-gradient(circle, red 0%, rgba(255, 0, 0, 0) 70%)'\n        : 'radial-gradient(circle, #bedbb070 0%, #bedbb000 70%)'};\n  }\n`;\n\nexport const ToolsButton = styled.button`\n  width: 16px;\n  height: 16px;\n  color: #888888;\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledContainerCardHeder = styled.div`\n  display: flex;\n`;\n\nexport const StyledP = styled.p`\n  display: inline-block;\n  color: ${props => props.theme.colors.cardMajorText};\n  font-size: 18px;\n  margin-bottom: 24px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  border: 1px solid ${props => props.theme.colors.btnAddBoard};\n  border-radius: 8px;\n  opacity: 0.4;\n  background: ${props => props.theme.colors.card};\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  font-size: 14px;\n  color: ${props => props.theme.colors.cardMajorText};\n  :focus-visible {\n    border: 1px solid ${props => props.theme.colors.btnAddBoard};\n    outline: none;\n  }\n`;\n\nexport const StyledTextArea = styled.textarea`\n  resize: none;\n  width: 100%;\n  height: 154px;\n  font-size: 14px;\n  color: ${props => props.theme.colors.cardMajorText};\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.btnAddBoard};\n  opacity: 0.4;\n  background: ${props => props.theme.colors.card};\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  margin-bottom: 24px;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n\n  :focus {\n    border-color: ${props => props.theme.colors.btnAddBoard};\n  }\n`;\n\nexport const StyledTitelBtn = styled.label`\n  color: ${props => props.theme.colors.cardMinorText};\n  font-size: 12px;\n`;\n\nexport const Container = styled.div`\n  color: ${props => props.theme.colors.btnAddBoard};\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.btnAddBoard};\n  justify-content: left;\n  align-items: center;\n  display: flex;\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nexport const RadioInput = styled.input`\n  position: relative;\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${props => props.theme.priority[props.priority]};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 1px;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: ${props => props.theme.colors.filterDecorativeElement};\n    background-color: ${props => props.theme.priority[props.priority]};\n    opacity: ${props => (props.checked ? '1' : ' 0')};\n  }\n`;\n\nexport const StyledTitleDeadline = styled.div`\n  color: ${props => props.theme.colors.cardMinorText};\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n`;\n\nexport const StyledFormikTitleNotification = styled.div`\n  margin-bottom: 5px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const StyledFormikDescriptionNotification = styled.div`\n  margin-top: -15px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const StyledFormikColorNotification = styled.div`\n  margin-top: -5px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const DatePickerContainer = styled.div`\n  .react-datepicker {\n    border-radius: 8px;\n    border: 1px solid #bedbb0;\n    background: ${props => props.theme.colors.calendarBackGround};\n  }\n\n  .react-datepicker-popper {\n    margin-left: 130px;\n    margin-top: -25px;\n  }\n\n  .react-datepicker__header {\n    background-color: ${props => props.theme.colors.calendarBackGround};\n  }\n\n  .react-datepicker__current-month {\n    color: ${props => props.theme.colors.calendarNumberColor};\n  }\n\n  .react-datepicker__day-name {\n    color: ${props => props.theme.colors.calendarNumberColor};\n  }\n\n  .react-datepicker__day {\n    color: ${props => props.theme.colors.calendarNumberColor};\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n    border-radius: 50%;\n\n    &:active,\n    &:hover {\n      background-color: ${props => props.theme.colors.calendarSelectedColor};\n    }\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: ${props => props.theme.colors.btnAddBoard};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--today.react-datepicker__day--selected {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n  }\n\n  .react-datepicker__day--today:not(.react-datepicker__day--selected):hover {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n    color: black;\n  }\n\n  .react-datepicker__day--selected:hover {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport sprite from '../../img/icons/sprite.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\nimport {\n  StyledP,\n  StyledInput,\n  StyledTextArea,\n  RadioGroup,\n  RadioInput,\n  RadioLabel,\n  StyledTitelBtn,\n  StyledTitleDeadline,\n  Container,\n  StyledFormikTitleNotification,\n  StyledFormikDescriptionNotification,\n  StyledFormikColorNotification,\n  DatePickerContainer,\n} from './AddTaskForm.styled';\nimport { ButtonCloseModal } from 'components/miniComponents/ButtonCloseModal/ButtonCloseModal';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton';\nimport { IconAddEditDeleteModal } from 'components/miniComponents/IconAddEditDeleteModal/IconAddEditDeleteModal';\nimport { ModalContent } from 'components/Modal/Modal.styled';\n\nexport const colors = ['#8FA1D0', '#E09CB5', '#BEDBB0', '#808080'];\nconst priorities = ['low', 'medium', 'high', 'without'];\n\nexport const TaskForm = ({\n  title: initialTitle = '',\n  description: initialDescription = '',\n  priority: initialPriority = '',\n  deadline: initialDeadline = new Date(),\n  onSubmit,\n  onClose,\n  isEditing = false,\n}) => {\n  const initialValues = {\n    title: initialTitle,\n    description: initialDescription,\n    priority: initialPriority,\n    deadline: initialDeadline,\n  };\n\n  const [deadline, setDeadline] = useState(initialDeadline);\n\n  const deadlinePickerRef = useRef(null);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Title is required')\n      .min(1, 'Title must contain at least 3 characters')\n      .max(32, 'Title must not exceed 50 characters'),\n    description: Yup.string()\n      .required('Description is required')\n      .min(1, 'Description must contain at least 10 characters')\n      .max(500, 'Description must not exceed 500 characters'),\n    priority: Yup.string().required('Please select a color'),\n    deadline: Yup.date()\n      .required('Please select a deadline date')\n      .min(new Date(), 'Deadline cannot be earlier than today'),\n  });\n\n  const handleDeadlineClick = () => {\n    if (deadlinePickerRef.current) {\n      deadlinePickerRef.current.setOpen(true);\n    }\n  };\n\n  const CurrentDate = () => {\n    const formattedDate = moment(deadline).format('D MMMM D');\n    return <div> {formattedDate}</div>;\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await onSubmit(values);\n      resetForm();\n      onClose();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n  });\n\n  const handleDateChange = date => {\n    if (date && date < new Date()) {\n      alert('Deadline cannot be before today.');\n      return;\n    }\n    formik.setFieldValue('deadline', date);\n    setDeadline(date);\n  };\n\n  const formattedDeadline = formik.values.deadline\n    ? moment(formik.values.deadline).format('D MMMM YYYY')\n    : CurrentDate();\n\n  const updateDeadline = deadline ? new Date(deadline) : null;\n\n  return (\n    <ModalContent>\n      <StyledP>{isEditing ? 'Edit Card' : 'Add Card'}</StyledP>\n      <ButtonCloseModal onClose={onClose} />\n      <form onSubmit={formik.handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.title && formik.errors.title ? (\n          <StyledFormikTitleNotification>\n            {formik.errors.title}\n          </StyledFormikTitleNotification>\n        ) : null}\n        <StyledTextArea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.description && formik.errors.description ? (\n          <StyledFormikDescriptionNotification>\n            {formik.errors.description}\n          </StyledFormikDescriptionNotification>\n        ) : null}\n        <StyledTitelBtn>Label color</StyledTitelBtn>\n        <br />\n        <RadioGroup>\n          {priorities.map((priority, index) => (\n            <RadioLabel key={index}>\n              <RadioInput\n                type=\"radio\"\n                priority={priority}\n                name=\"priority\"\n                color={colors[index]}\n                value={priority}\n                checked={formik.values.priority === priority}\n                onChange={formik.handleChange}\n              />\n            </RadioLabel>\n          ))}\n        </RadioGroup>\n        {formik.touched.priority && formik.errors.priority ? (\n          <StyledFormikColorNotification>\n            {formik.errors.priority}\n          </StyledFormikColorNotification>\n        ) : null}\n\n        <StyledTitleDeadline>\n          Deadline\n          <Container>\n            {formattedDeadline}\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n              fill=\"#BEDBB0\"\n              onClick={handleDeadlineClick}\n              style={{\n                marginLeft: '5px',\n                cursor: 'pointer',\n              }}\n            >\n              <use xlinkHref={`${sprite}#icon-chevron-down`} />\n            </svg>\n          </Container>\n          {formik.touched.deadline && formik.errors.deadline ? (\n            <div>{formik.errors.deadline}</div>\n          ) : null}\n          <DatePickerContainer>\n            <DatePicker\n              className=\"custom-datepicker\"\n              ref={deadlinePickerRef}\n              name=\"deadline\"\n              selected={updateDeadline}\n              onChange={handleDateChange}\n              locale=\"en\"\n              dateFormat=\"d MMMM yyyy\"\n              showTimeSelect={false}\n              customInput={<div></div>}\n            />\n          </DatePickerContainer>\n        </StyledTitleDeadline>\n        <PrimaryButton type=\"submit\" title={isEditing ? 'Edit' : 'Add'}>\n          <IconAddEditDeleteModal icon={isEditing ? 'pencil' : 'plus'} />\n        </PrimaryButton>\n      </form>\n    </ModalContent>\n  );\n};\n\nTaskForm.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  priority: PropTypes.string,\n  deadline: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  isEditing: PropTypes.bool,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editTask } from '../../store/columns/operations';\nimport { TaskForm } from './TaskForm'; \nimport PropTypes from 'prop-types';\n\nexport const EditTask = ({\n  boardId,\n  columnId,\n  closeModal,\n  title,\n  description,\n  priority,\n  index,\n  taskId,\n  deadline,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async values => {\n    try {\n      await dispatch(editTask({ ...values, index, boardId, columnId, taskId }));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <TaskForm\n      title={title}\n      description={description}\n      priority={priority}\n      index={index}\n      taskId={taskId}\n      deadline={deadline}\n      onSubmit={handleSubmit}\n      onClose={closeModal}\n      isEditing={true}\n    />\n  );\n};\n\nEditTask.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  columnId: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  priority: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  taskId: PropTypes.string.isRequired,\n  deadline: PropTypes.string.isRequired,\n};","import {\n  CardDescriptionStyled,\n  CardFooter,\n  CardParamsTitle,\n  CardParamsWrapper,\n  CardStyled,\n  CardTitleStyled,\n  DeadlineDate,\n  PriorityStatus,\n  ToolsButton,\n  ToolsButtonBell,\n  ToolsWrapper,\n} from './Card.styled';\nimport sprite from '../../img/icons/sprite.svg';\nimport { Svg } from 'components/SvgIcon/SvgIcon';\nimport { forwardRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'components/Modal';\nimport { EditTask } from 'components/AddTaskForm/EditTaskForm';\nimport { deleteTask } from '../../store/columns/operations';\nimport moment from 'moment';\n\nexport const Card = forwardRef(\n  (\n    {\n      _id,\n      title,\n      description,\n      priority,\n      deadline,\n      index,\n      boardId,\n      columnId,\n      taskData,\n      ...rest\n    },\n    ref\n  ) => {\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const dispatch = useDispatch();\n\n    const openEditModal = () => {\n      setIsEditModalOpen(true);\n    };\n\n    const closeEditModal = () => {\n      setIsEditModalOpen(false);\n    };\n\n    const handleDeleteTaskButtonClick = async () => {\n      await dispatch(deleteTask({ boardId, columnId, taskId: _id }));\n    };\n\n    const formattedDeadline = moment(deadline).format('DD/MM/YYYY');\n\n    return (\n      <CardStyled color={priority} ref={ref} {...rest}>\n        <CardTitleStyled>{title}</CardTitleStyled>\n        <CardDescriptionStyled>{description}</CardDescriptionStyled>\n        <CardFooter>\n          <CardParamsWrapper>\n            <div>\n              <CardParamsTitle>Priority</CardParamsTitle>\n              <PriorityStatus color={priority}>{priority}</PriorityStatus>\n            </div>\n            <div>\n              <CardParamsTitle>Deadline</CardParamsTitle>\n              <DeadlineDate>{formattedDeadline}</DeadlineDate>\n            </div>\n          </CardParamsWrapper>\n          <ToolsButtonBell\n            type=\"button\"\n            pastDeadline={moment(deadline).isBefore(moment())}\n          >\n            <Svg w={16} h={16} use={`${sprite}#icon-bell`} />\n          </ToolsButtonBell>\n          <ToolsWrapper>\n            <ToolsButton type=\"button\" onClick={openEditModal}>\n              <Svg w={16} h={16} use={`${sprite}#icon-pencil`} />\n            </ToolsButton>\n            {isEditModalOpen && (\n              <Modal onClose={closeEditModal}>\n                <EditTask\n                  boardId={boardId}\n                  columnId={columnId}\n                  taskId={_id}\n                  taskData={taskData}\n                  title={title}\n                  description={description}\n                  deadline={deadline}\n                  index={index}\n                  priority={priority}\n                  closeModal={closeEditModal}\n                />\n              </Modal>\n            )}\n            <ToolsButton type=\"button\" onClick={handleDeleteTaskButtonClick}>\n              <Svg w={16} h={16} use={`${sprite}#icon-trash`} />\n            </ToolsButton>\n          </ToolsWrapper>\n        </CardFooter>\n      </CardStyled>\n    );\n  }\n);\n","export const selectStatusFilter = state => state.filters.status;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport {\n  CardListContainer,\n  CardListStyled,\n  TrackVertical,\n  ThumbVertical,\n} from './CardList.styled';\nimport { Card } from './Card';\nimport { selectStatusFilter } from 'store/filter/selectors';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\n\nexport const CardList = ({ boardId, cards, columnId }) => {\n  const status = useSelector(selectStatusFilter);\n  const filteredCards = status.priority\n    ? cards.filter(card => card.priority === status.priority)\n    : cards;\n\n  return (\n    <Droppable droppableId={columnId} type=\"CARD\">\n      {provided => (\n        <CardListContainer {...provided.droppableProps}>\n          <Scrollbars\n            hideTracksWhenNotNeeded={true}\n            renderTrackVertical={({ style, ...props }) => (\n              <TrackVertical\n                {...props}\n                style={{\n                  ...style,\n                }}\n              />\n            )}\n            renderThumbVertical={({ style, ...props }) => (\n              <ThumbVertical\n                {...props}\n                style={{\n                  ...style,\n                }}\n              />\n            )}\n          >\n            <CardListStyled ref={provided.innerRef}>\n              {filteredCards.map(\n                (\n                  { _id, title, description, priority, deadline, owner },\n                  index\n                ) => {\n                  return (\n                    <Draggable key={_id} draggableId={_id} index={index}>\n                      {dragProvided => (\n                        <Card\n                          key={_id}\n                          _id={_id}\n                          ref={dragProvided.innerRef}\n                          title={title}\n                          description={description}\n                          priority={priority}\n                          deadline={deadline}\n                          index={index}\n                          boardId={boardId}\n                          columnId={owner}\n                          {...dragProvided.draggableProps}\n                          {...dragProvided.dragHandleProps}\n                        />\n                      )}\n                    </Draggable>\n                  );\n                }\n              )}\n            </CardListStyled>\n          </Scrollbars>\n          {provided.placeholder}\n        </CardListContainer>\n      )}\n    </Droppable>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../../store/columns/operations';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'store/columns/selectors';\nimport { TaskForm } from './TaskForm'; \nimport PropTypes from 'prop-types';\n\nexport const AddTasks = ({ boardId, columnId, closeModal, taskId }) => {\n  const dispatch = useDispatch();\n\n  const columns = useSelector(selectColumns);\n  const currentColumn = columns.filter(val => val._id === columnId);\n  const index = currentColumn[0].cards.length;\n\n  const handleSubmit = async values => {\n    try {\n      await dispatch(addTask({ ...values, index, boardId, columnId, taskId }));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <TaskForm\n      onSubmit={handleSubmit}\n      onClose={closeModal}\n      isEditing={false}\n    />\n  );\n};\n\nAddTasks.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  columnId: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  taskId: PropTypes.string,\n};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { deleteColumn } from '../../store/columns/operations';\nimport sprite from '../../img/icons/sprite.svg';\nimport { useAskDeleteModal, useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport { ColumnForm } from './ColumnForm';\n\nimport {\n  ColumnContainer,\n  ColumnTitleContainer,\n  ColumnTitle,\n  IconContainer,\n  TitleIcon,\n  IconButton,\n} from './Column.styled';\nimport { CardList } from 'components/Card/CardList';\nimport { AddTasks } from 'components/AddTaskForm/AddTaskForm';\n// import { useDeleteColumn } from 'hooks/useDeleteBoard';\nimport { AskDeleteModal } from 'components/AskDeleteModal/AskDeleteModal';\nimport { PrimaryButton } from 'components/PrimaryButton/PrimaryButton';\nimport { IconAddEditDeleteModal } from 'components/miniComponents/IconAddEditDeleteModal/IconAddEditDeleteModal';\n\nexport const Column = ({ _id, title, createdAt, cards, owner, index }) => {\n  const [titleColumn, setTitleColumn] = useState('Delete column?');\n  const [isEditCardMode, setIsEditCardMode] = useState(false);\n\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const { isAskDeleteModalOpen, openAskDeleteModal, closeAskDeleteModal } =\n    useAskDeleteModal();\n\n  const dispatch = useDispatch();\n\n  const handleDeleteColumnEmty = () => {\n    openAskDeleteModal();\n    switch (cards.length) {\n      case 0:\n        setTitleColumn(`Delete column \"${title}\"?`);\n        break;\n      case 1:\n        setTitleColumn(`Delete column \"${title}\" with one task?`);\n        break;\n      default:\n        setTitleColumn(`Delete column \"${title}\" with ${cards.length} tasks?`);\n    }\n  };\n\n  const handleDeleteColumnFull = () => {\n    dispatch(deleteColumn({ boardId: owner, columnId: _id }));\n    Notify.info(`The column ${title} was successfully deleted`);\n  };\n\n  const handleAddCardButtonClick = () => {\n    setIsEditCardMode(false);\n    openModal();\n  };\n\n  const handleEditCardButtonClick = () => {\n    setIsEditCardMode(true);\n    openModal();\n  };\n\n  return (\n    <Draggable draggableId={_id} index={index}>\n      {provided => (\n        <ColumnContainer ref={provided.innerRef} {...provided.draggableProps}>\n          <ColumnTitleContainer {...provided.dragHandleProps}>\n            <ColumnTitle>{title}</ColumnTitle>\n            <IconContainer>\n              <IconButton\n                type=\"button\"\n                onClick={() => handleEditCardButtonClick(openModal)}\n              >\n                <TitleIcon>\n                  <use href={`${sprite}#icon-pencil`}></use>\n                </TitleIcon>\n              </IconButton>\n              <IconButton type=\"button\" onClick={handleDeleteColumnEmty}>\n                <TitleIcon>\n                  <use href={`${sprite}#icon-trash`}></use>\n                </TitleIcon>\n              </IconButton>\n            </IconContainer>\n          </ColumnTitleContainer>\n          {cards && <CardList boardId={owner} columnId={_id} cards={cards} />}\n          <PrimaryButton\n            type=\"button\"\n            action={handleAddCardButtonClick}\n            title=\"Add another card\"\n          >\n            <IconAddEditDeleteModal icon=\"plus\" />\n          </PrimaryButton>\n          {isModalOpen && isEditCardMode && (\n            <Modal onClose={closeModal}>\n              <ColumnForm\n                id={_id}\n                boardId={owner}\n                onCloseForm={closeModal}\n                columnTitle={title}\n                isEditMode={true}\n              />\n            </Modal>\n          )}\n          {isModalOpen && !isEditCardMode && (\n            <Modal onClose={closeModal}>\n              <AddTasks\n                boardId={owner}\n                columnId={_id}\n                closeModal={closeModal}\n                index={index}\n              />\n            </Modal>\n          )}\n          {isAskDeleteModalOpen && (\n            <Modal onClose={closeAskDeleteModal}>\n              <AskDeleteModal\n                onClick={closeAskDeleteModal}\n                handleDelete={handleDeleteColumnFull}\n                title={titleColumn}\n              />\n            </Modal>\n          )}\n        </ColumnContainer>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ColumnListStyled = styled.ul`\n  display: flex;\n  gap: 34px;\n  margin-right: 34px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Column } from '../MainDashboard/Column';\nimport { ColumnListStyled } from './ColunmList.styled';\nimport {\n  selectColumns,\n  selectIsLoading,\n  selectError,\n} from 'store/columns/selectors';\n\nimport { editColumn, editTask, getColumns } from 'store/columns/operations';\nimport { Loader } from '../Loader/Loader';\nimport { columnsActions } from '../../store/columns/slice';\nimport { reorder } from 'utils/dragAndDrop';\n\nexport const ColumnList = ({ boardId }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  if (error) {\n    Notify.warning(error);\n  }\n\n  useEffect(() => {\n    if (!boardId) {\n      return;\n    }\n    dispatch(getColumns(boardId));\n  }, [boardId, dispatch]);\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n\n    if (\n      !destination ||\n      (source.droppableId === destination.droppableId &&\n        source.index === destination.index)\n    ) {\n      return;\n    }\n\n    if (result.type === 'COLUMN') {\n      dispatch(\n        columnsActions.moveColumns({\n          sourceIndex: source.index,\n          destinationIndex: destination.index,\n        })\n      );\n      const arr = reorder(columns, source.index, destination.index);\n      arr.forEach((e, i) => {\n        dispatch(editColumn({ boardId, id: e._id, title: e.title, index: i }));\n      });\n      return;\n    }\n\n    const sourceCol = columns.filter(\n      val => val._id === result.source.droppableId\n    );\n    const destCol = columns.filter(\n      val => val._id === result.destination.droppableId\n    );\n    let sourceArr = [...sourceCol[0].cards];\n    let destArr = [...destCol[0].cards];\n    const draggableCard = sourceArr.find(val => val._id === result.draggableId);\n    sourceArr.splice(result.source.index, 1);\n    destArr.splice(result.destination.index, 0, draggableCard);\n\n    sourceArr.forEach((e, i) => {\n      dispatch(\n        editTask({\n          title: e.title,\n          description: e.description,\n          priority: e.priority,\n          deadline: e.deadline,\n          index: i,\n          boardId,\n          columnId: e.owner,\n          taskId: e._id,\n        })\n      );\n    });\n    destArr.forEach((e, i) => {\n      dispatch(\n        editTask({\n          title: e.title,\n          description: e.description,\n          priority: e.priority,\n          deadline: e.deadline,\n          index: i,\n          boardId,\n          columnId: result.destination.droppableId,\n          taskId: e._id,\n        })\n      );\n    });\n    dispatch(columnsActions.moveCards({ source, destination }));\n  };\n\n  if (isLoading) {\n    return <Loader fill={'#fff'} />;\n  }\n  if (columns.length > 0) {\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId={boardId} type=\"COLUMN\" direction=\"horizontal\">\n          {provided => (\n            <ColumnListStyled\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {columns.map(({ _id, title, createdAt, owner, cards }, index) => (\n                <Column\n                  key={_id}\n                  index={index}\n                  owner={owner}\n                  _id={_id}\n                  title={title}\n                  createdAt={createdAt}\n                  cards={cards}\n                />\n              ))}\n              {provided.placeholder}\n            </ColumnListStyled>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n};\n","import styled from '@emotion/styled';\nimport { baseTransition, devices } from 'styles';\n\nexport const CreateBoardContainer = styled.div`\n  margin: auto;\n  text-align: center;\n  color: ${props => props.theme.colors.createBoardContainerColor};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2;\n  letter-spacing: -0.28px;\n\n  @media screen and (${devices.tablet}) {\n    max-width: 486px;\n  }\n`;\n\nexport const CreateBoardButton = styled.button`\n  color: ${props => props.theme.colors.formAddButtonBackground};\n  font-family: Poppins;\n  transition: color ${baseTransition};\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.formAddButtonHover};\n  }\n`;\n","import React from 'react';\nimport { Modal } from '../Modal/Modal';\nimport { useModal } from 'hooks/useModal';\nimport MoodalForBoards from 'components/ModalForBoards/ModalForBoards';\n\nimport { CreateBoardContainer, CreateBoardButton } from './CreateBoard.styled';\n\nconst CreateBoard = () => {\n  const { isModalOpen, openModal, closeModal } = useModal();\n  return (\n    <>\n      <CreateBoardContainer>\n        Before starting your project, it is essential{' '}\n        <CreateBoardButton type=\"button\" onClick={openModal}>\n          to create a board\n        </CreateBoardButton>\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </CreateBoardContainer>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <MoodalForBoards onClick={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default CreateBoard;\n","import styled from '@emotion/styled';\nimport { baseTransition, devices } from 'styles';\n\nexport const MainDashboardSection = styled.section`\n  position: relative;\n  background-color: ${props => props.theme.colors.background};\n  background-image: ${props =>\n    props.background !== 'default'\n      ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Mobile/${props.background}.jpg\")`\n      : 'none'};\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  @media screen and (${devices.retina}),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Mobile/${props.background}%402x.jpg\")`\n        : 'none'};\n  }\n\n  @media screen and (${devices.tablet}) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Tablet/${props.background}.jpg\")`\n        : 'none'};\n    @media screen and (${devices.retina}),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== 'default'\n          ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Tablet/${props.background}%402x.jpg\")`\n          : 'none'};\n    }\n  }\n\n  @media screen and (${devices.desktop}) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Desktop/${props.background}.jpg\")`\n        : 'none'};\n    @media screen and (${devices.retina}),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== 'default'\n          ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Desktop/${props.background}.jpg\")`\n          : 'none'};\n    }\n  }\n`;\n\nexport const MainDashboardContainer = styled.div`\n  min-height: calc(100svh - 60px);\n  height: 100%;\n  padding: 74px 0 24px 0;\n  overflow-x: auto;\n  display: flex;\n\n  @media screen and (${devices.tablet}) {\n    min-height: calc(100svh - 68px);\n    gap: 34px;\n    padding: 80px 0 32px 0;\n  }\n\n  @media screen and (${devices.desktop}) {\n    min-height: calc(100vh - 68px);\n    padding: 48px 0 8px 0;\n  }\n`;\n\nexport const MainDashboardSectionTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\nexport const ContentWrapper = styled.div`\n  width: max-content;\n  height: 100%;\n  margin-right: 20px;\n\n  display: flex;\n  margin-left: 20px;\n\n  @media screen and (${devices.tablet}) {\n    margin-left: 32px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    margin-left: 24px;\n  }\n`;\n\nexport const MainDashboardAddColumnButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 335px;\n  height: 56px;\n  padding: 14px 78px;\n  margin-right: 20px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border-radius: 8px;\n  color: ${props => props.theme.colors.addColumnButtonColor};\n  background-color: ${props => props.theme.colors.addColumnButtonBackground};\n  transition: background ${baseTransition};\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.addColumnButtonHoverBackground};\n\n    @media screen and (${devices.tablet}) {\n      margin-right: 32px;\n    }\n\n    @media screen and (${devices.desktop}) {\n      margin-right: 24px;\n    }\n  }\n`;\n\nexport const MainDashboardIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.colors.iconContainerBackground};\n  border-radius: 6px;\n`;\n\nexport const MainDashboardIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: ${props => props.theme.colors.addColumnIconFill};\n`;\n\nexport const FilterContainer = styled.div`\n  position: absolute;\n  width: 100%;\n`;\n\nexport const ContentHolder = styled.div`\n  width: 100%;\n`;\n\nexport const TrackHorizontal = styled.div`\n  min-height: 12px;\n  border-radius: 12px;\n  bottom: 0;\n  left: 20px;\n  right: 20px;\n  @media screen and (${devices.tablet}) {\n    left: 32px;\n    right: 32px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    left: 24px;\n    right: 24px;\n  }\n  background-color: ${props =>\n    props.theme.colors.mainTrackHorizontalBackground};\n`;\n\nexport const ThumbHorizontal = styled.div`\n  height: 12px;\n  border-radius: 12px;\n  background-color: ${props =>\n    props.theme.colors.mainThumbHorizontalBackground};\n`;\n","import styled from '@emotion/styled';\n\nimport { baseTransition } from 'styles';\n\nexport const FilterButton = styled.button`\n  position: relative;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  padding-left: 22px;\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.filterBtnColorSelected\n      : props.theme.colors.filterBtnColor};\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.text === 'Without priority'\n        ? props.theme.colors.filterWithoutPriorityColor\n        : props.color};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 1px;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: ${props => props.theme.colors.filterDecorativeElement};\n    opacity: ${props => (props.selected ? '1' : ' 0')};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { FilterButton } from './StatusFilterButton.styled';\n\nconst StatusFilterButton = ({ selected, color, children, onClick }) => {\n  return (\n    <FilterButton\n      selected={selected}\n      type=\"button\"\n      onClick={onClick}\n      color={color}\n      text={children}\n    >\n      {children}\n    </FilterButton>\n  );\n};\n\nStatusFilterButton.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  color: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StatusFilterButton;\n","import styled from '@emotion/styled';\nimport { ModalContent } from 'components/Modal/Modal.styled';\n\nimport { baseTransition } from 'styles';\n\nexport const StatusFilterContainer = styled(ModalContent)`\n  max-width: 300px;\n`;\n\nexport const StatusFilterMainText = styled.p`\n  color: ${props => props.theme.colors.titleColor};\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  width: 100%;\n  padding-bottom: 14px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 14px;\n`;\n\nexport const StatusFilterBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const StatusFilterLabel = styled.p`\n  color: ${props => props.theme.colors.titleColor};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const StatusFilterShowAll = styled.button`\n  cursor: pointer;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.filterBtnColorSelected\n      : props.theme.colors.filterBtnColor};\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n`;\n\nexport const StatusFilterItem = styled.li`\n  &:not(:last-of-type) {\n    margin-bottom: 8px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectStatusFilter } from 'store/filter/selectors';\nimport { statusFilters } from 'store/filter/constants';\nimport { setStatusFilter } from 'store/filter/filterSlice';\nimport StatusFilterButton from 'components/StatusFilterButton';\n\nimport {\n  StatusFilterContainer,\n  StatusFilterMainText,\n  StatusFilterLabel,\n  StatusFilterBox,\n  StatusFilterShowAll,\n  StatusFilterItem,\n} from './StatusFilter.styled';\nimport { ButtonCloseModal } from 'components/miniComponents/ButtonCloseModal/ButtonCloseModal';\n\nconst options = [\n  {\n    text: 'Without priority',\n    color: 'rgba(255, 255, 255, 0.3)',\n  },\n  {\n    text: 'Low',\n    color: 'rgba(143, 161, 208, 1)',\n  },\n  {\n    text: 'Medium',\n    color: 'rgba(224, 156, 181, 1)',\n  },\n  {\n    text: 'High',\n    color: 'rgba(190, 219, 176, 1)',\n  },\n];\n\nconst StatusFilter = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  const onChangeFilterClick = text => {\n    switch (text) {\n      case 'Without priority':\n        return handleFilterChange(statusFilters.none);\n      case 'Show all':\n        return handleFilterChange(statusFilters.all);\n      case 'Low':\n        return handleFilterChange(statusFilters.low);\n      case 'Medium':\n        return handleFilterChange(statusFilters.medium);\n      case 'High':\n        return handleFilterChange(statusFilters.high);\n      default:\n        return;\n    }\n  };\n\n  const filter = useSelector(selectStatusFilter);\n\n  return (\n    <StatusFilterContainer>\n      <ButtonCloseModal onClose={onClose} />\n      <StatusFilterMainText>Filter</StatusFilterMainText>\n      <StatusFilterBox>\n        <StatusFilterLabel>Label color</StatusFilterLabel>\n\n        <StatusFilterShowAll\n          type=\"button\"\n          selected={!filter.priority}\n          onClick={() => onChangeFilterClick('Show all')}\n        >\n          Show all\n        </StatusFilterShowAll>\n      </StatusFilterBox>\n      <ul>\n        {options.map(({ text, color }, index) => (\n          <StatusFilterItem key={index}>\n            <StatusFilterButton\n              selected={filter.statusText === text}\n              onClick={() => onChangeFilterClick(text)}\n              color={color}\n            >\n              {text}\n            </StatusFilterButton>\n          </StatusFilterItem>\n        ))}\n      </ul>\n    </StatusFilterContainer>\n  );\n};\n\nStatusFilter.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default StatusFilter;\n","import styled from '@emotion/styled';\n\nimport { devices, baseTransition } from 'styles';\n\nexport const DashboardHeaderTitle = styled.h2`\n  position: absolute;\n  top: 10px;\n  left: 12px;\n  color: ${props => props.theme.colors.titleColor};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: ${props =>\n    props.dashboard.background === 'default'\n      ? 'none'\n      : props.theme.colors.filterBgd};\n  padding: 4px 8px;\n  border-radius: 10px;\n\n  @media screen and (${devices.tablet}) {\n    font-size: 18px;\n    letter-spacing: -0.36px;\n    top: 24px;\n    left: 24px;\n\n    padding: 2px 8px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    top: 8px;\n  }\n`;\n\nexport const DashboardHeaderFilter = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: ${props => props.theme.colors.filterColor};\n  transition: color ${baseTransition}, box-shadow ${baseTransition};\n\n  background-color: ${props => {\n    if (!props.dashboard) return 'none';\n\n    return props.dashboard && props.dashboard.background === 'default'\n      ? 'none'\n      : props.theme.colors.filterBgd;\n  }};\n  padding: 4px 8px;\n  border-radius: 10px;\n\n  @media screen and (${devices.tablet}) {\n    top: 16px;\n    right: 24px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    top: 10px;\n    right: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => {\n      if (props.disabled) return;\n      return props.theme.colors.iconHover;\n    }};\n    box-shadow: ${props => {\n      if (props.dashboard === null) return 'none';\n\n      return props.dashboard && props.dashboard.background === 'default'\n        ? 'none'\n        : props.theme.colors.filterShadow;\n    }};\n  }\n`;\n\nexport const DashboardHeaderText = styled.p`\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n","import { useModal } from 'hooks/useModal';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from 'components/Modal/Modal';\nimport StatusFilter from 'components/StatusFilter';\nimport sprite from '../../img/icons/sprite.svg';\nimport { Svg } from 'components/SvgIcon/SvgIcon';\n\nimport {\n  DashboardHeaderFilter,\n  DashboardHeaderText,\n  DashboardHeaderTitle,\n} from './DashboardHeader.styled';\n\nconst DashboardHeader = ({ name, disabled, dashboard }) => {\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const iconName = '#icon-filter';\n  return (\n    <>\n      {name && (\n        <DashboardHeaderTitle dashboard={dashboard}>\n          {name}\n        </DashboardHeaderTitle>\n      )}\n\n      <DashboardHeaderFilter\n        dashboard={dashboard}\n        type=\"button\"\n        onClick={openModal}\n        disabled={disabled}\n      >\n        <Svg w={16} h={16} use={`${sprite}${iconName}`} />\n        <DashboardHeaderText>Filters</DashboardHeaderText>\n      </DashboardHeaderFilter>\n\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <StatusFilter onClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nDashboardHeader.propTypes = {\n  name: PropTypes.string,\n  disabled: PropTypes.bool.isRequired,\n  dashboard: PropTypes.shape({\n    background: PropTypes.string.isRequired,\n  }),\n};\n\nexport default DashboardHeader;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport { ColumnForm } from '../../components/MainDashboard/ColumnForm';\nimport { ColumnList } from '../../components/MainDashboard/ColunmList';\nimport CreateBoard from '../../components/MainDashboard/CreateBoard';\nimport sprite from '../../img/icons/sprite.svg';\nimport {\n  MainDashboardContainer,\n  MainDashboardSection,\n  MainDashboardSectionTitle,\n  MainDashboardAddColumnButton,\n  MainDashboardIconContainer,\n  MainDashboardIcon,\n  FilterContainer,\n  ContentHolder,\n  ContentWrapper,\n  TrackHorizontal,\n  ThumbHorizontal,\n} from './MainDashboard.styled';\nimport DashboardHeader from 'components/DashboardHeader/DashboardHeader';\nimport { selectBoardsState } from 'store/boards/selectors';\nimport { selectColumns } from 'store/columns/selectors';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nconst MainDashboard = () => {\n  const { boardName } = useParams();\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const { boards } = useSelector(selectBoardsState);\n  const selectedBoard = boardName\n    ? boards.find(board => board.title === boardName.trim())\n    : null;\n\n  const columns = useSelector(selectColumns);\n  const hasCards = columns.some(column => column.cards.length > 0);\n\n  return (\n    <MainDashboardSection background={selectedBoard?.background || 'default'}>\n      <FilterContainer>\n        <DashboardHeader\n          name={selectedBoard?.title}\n          disabled={!hasCards}\n          dashboard={selectedBoard}\n        />\n      </FilterContainer>\n      <MainDashboardContainer>\n        {boardName ? (\n          <>\n            <MainDashboardSectionTitle>\n              Columns with tasks\n            </MainDashboardSectionTitle>\n            <ContentHolder>\n              <Scrollbars\n                hideTracksWhenNotNeeded={true}\n                renderTrackHorizontal={({ style, ...props }) => (\n                  <TrackHorizontal\n                    {...props}\n                    style={{\n                      ...style,\n                    }}\n                  />\n                )}\n                renderThumbHorizontal={({ style, ...props }) => (\n                  <ThumbHorizontal\n                    {...props}\n                    style={{\n                      ...style,\n                    }}\n                  />\n                )}\n              >\n                <ContentWrapper>\n                  <ColumnList boardId={selectedBoard?._id} />\n                  <MainDashboardAddColumnButton\n                    type=\"button\"\n                    onClick={openModal}\n                  >\n                    <MainDashboardIconContainer>\n                      <MainDashboardIcon>\n                        <use href={`${sprite}#icon-plus`}></use>\n                      </MainDashboardIcon>\n                    </MainDashboardIconContainer>\n                    <div>Add another column</div>\n                  </MainDashboardAddColumnButton>\n                </ContentWrapper>\n              </Scrollbars>\n            </ContentHolder>\n            {isModalOpen && (\n              <Modal onClose={closeModal}>\n                <ColumnForm\n                  onCloseForm={closeModal}\n                  boardId={selectedBoard?._id}\n                />\n              </Modal>\n            )}\n          </>\n        ) : (\n          <CreateBoard />\n        )}\n      </MainDashboardContainer>\n    </MainDashboardSection>\n  );\n};\n\nexport default MainDashboard;\n"],"names":["FormTitle","styled","props","theme","colors","formTitleColor","FormInput","Field","formInputColor","formInputBackground","formInputBorderColor","baseTransition","ValidationError","TitleContainer","ColumnFormSchema","Yup","shape","title","min","max","required","ColumnForm","id","boardId","isEditMode","onCloseForm","columnTitle","dispatch","useDispatch","index","useSelector","selectColumns","length","buttonText","icon","ButtonCloseModal","onClose","initialValues","validationSchema","onSubmit","values","actions","resetForm","editColumn","addColumn","handleSubmit","errors","touched","name","placeholder","PrimaryButton","type","IconAddEditDeleteModal","ColumnContainer","ColumnTitleContainer","card","ColumnTitle","titleColor","IconContainer","TitleIcon","iconFill","iconHover","IconButton","CardListContainer","devices","CardListStyled","TrackVertical","columnTrackVerticalBackground","ThumbVertical","columnThumbVerticalBackground","CardStyled","priority","color","CardTitleStyled","cardMajorText","CardDescriptionStyled","cardMinorText","CardFooter","cardDecor","CardParamsWrapper","CardParamsTitle","PriorityStatus","DeadlineDate","ToolsWrapper","ToolsButtonBell","pastDeadline","ToolsButton","StyledP","StyledInput","btnAddBoard","StyledTextArea","StyledTitelBtn","Container","RadioGroup","RadioLabel","RadioInput","filterDecorativeElement","checked","StyledTitleDeadline","StyledFormikTitleNotification","btnAddColumn","StyledFormikDescriptionNotification","StyledFormikColorNotification","DatePickerContainer","calendarBackGround","calendarNumberColor","calendarSelectedColor","priorities","TaskForm","initialTitle","description","initialDescription","initialPriority","deadline","initialDeadline","Date","isEditing","useState","setDeadline","deadlinePickerRef","useRef","console","error","formik","useFormik","formattedDeadline","moment","format","formattedDate","CurrentDate","updateDeadline","value","onChange","handleChange","map","className","width","height","role","fill","onClick","current","setOpen","style","marginLeft","cursor","xlinkHref","sprite","ref","selected","date","alert","setFieldValue","locale","dateFormat","showTimeSelect","customInput","EditTask","columnId","closeModal","taskId","editTask","Card","forwardRef","_id","taskData","rest","isEditModalOpen","setIsEditModalOpen","closeEditModal","handleDeleteTaskButtonClick","deleteTask","isBefore","w","h","use","Modal","selectStatusFilter","state","filters","status","CardList","cards","filteredCards","filter","droppableId","provided","droppableProps","hideTracksWhenNotNeeded","renderTrackVertical","renderThumbVertical","innerRef","owner","draggableId","dragProvided","draggableProps","dragHandleProps","AddTasks","val","addTask","Column","createdAt","titleColumn","setTitleColumn","isEditCardMode","setIsEditCardMode","useModal","isModalOpen","openModal","useAskDeleteModal","isAskDeleteModalOpen","openAskDeleteModal","closeAskDeleteModal","handleDeleteColumnEmty","handleDeleteColumnFull","deleteColumn","Notify","handleAddCardButtonClick","href","action","AskDeleteModal","handleDelete","ColumnListStyled","ColumnList","columns","isLoading","selectIsLoading","selectError","useEffect","getColumns","Loader","onDragEnd","result","source","destination","columnsActions","sourceIndex","destinationIndex","reorder","forEach","e","i","sourceCol","destCol","sourceArr","destArr","draggableCard","find","splice","direction","CreateBoardContainer","createBoardContainerColor","CreateBoardButton","formAddButtonBackground","formAddButtonHover","MainDashboardSection","background","MainDashboardContainer","MainDashboardSectionTitle","ContentWrapper","MainDashboardAddColumnButton","addColumnButtonColor","addColumnButtonBackground","addColumnButtonHoverBackground","MainDashboardIconContainer","iconContainerBackground","MainDashboardIcon","addColumnIconFill","FilterContainer","ContentHolder","TrackHorizontal","mainTrackHorizontalBackground","ThumbHorizontal","mainThumbHorizontalBackground","FilterButton","filterBtnColorSelected","filterBtnColor","text","filterWithoutPriorityColor","children","StatusFilterContainer","ModalContent","StatusFilterMainText","StatusFilterBox","StatusFilterLabel","StatusFilterShowAll","StatusFilterItem","options","handleFilterChange","setStatusFilter","onChangeFilterClick","statusFilters","statusText","DashboardHeaderTitle","dashboard","filterBgd","DashboardHeaderFilter","filterColor","disabled","filterShadow","DashboardHeaderText","boardName","useParams","boards","selectBoardsState","selectedBoard","board","trim","hasCards","some","column","renderTrackHorizontal","renderThumbHorizontal"],"sourceRoot":""}