{"version":3,"file":"static/js/597.ea342d2d.chunk.js","mappings":"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","sources":["components/MainDashboard/ColumnForm.styled.js","components/MainDashboard/ColumnForm.jsx","components/MainDashboard/Column.styled.js","components/Card/CardList.styled.js","components/Card/Card.styled.js","components/AddTaskForm/AddTaskForm.styled.js","components/AddTaskForm/EditTaskForm.jsx","components/Card/Card.jsx","store/filter/selectors.js","components/Card/CardList.jsx","components/AddTaskForm/AddTaskForm.jsx","components/MainDashboard/Column.jsx","components/MainDashboard/ColunmList.styled.js","components/MainDashboard/ColunmList.jsx","components/MainDashboard/CreateBoard.styled.js","components/MainDashboard/CreateBoard.jsx","pages/MainDashboard/MainDashboard.styled.js","components/StatusFilterButton/StatusFilterButton.styled.js","components/StatusFilterButton/StatusFilterButton.jsx","components/StatusFilter/StatusFilter.styled.js","components/StatusFilter/StatusFilter.jsx","components/DashboardHeader/DashboardHeader.styled.js","components/DashboardHeader/DashboardHeader.jsx","pages/MainDashboard/MainDashboard.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { baseTransition } from 'styles';\n\nexport const FormTitle = styled.p`\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  color: ${props => props.theme.colors.formTitleColor};\n`;\n\nexport const FormContainer = styled.div`\n  position: relative;\n  max-width: 335px;\n  padding: 24px;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.formBackgroundColor};\n  border: 1px solid ${props => props.theme.colors.formBorderColor};\n  @media (min-width: 768px) {\n    min-width: 350px;\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  font-size: 14px;\n  font-weight: 400;\n  color: ${props => props.theme.colors.formInputColor};\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: ${props => props.theme.colors.formInputBackground};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.formInputBorderColor};\n  opacity: 0.4;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    outline: none;\n  }\n\n  transition: background ${baseTransition};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  height: 49px;\n  padding: 10px 0px 11px 0px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.formAddButtonColor};\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.formAddButtonBackground};\n  transition: background ${baseTransition};\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.formAddButtonHover};\n  }\n`;\n\nexport const FormIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.colors.formIconContainerBackground};\n  border-radius: 6px;\n`;\n\nexport const FormIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: ${props => props.theme.colors.formIconAddButtonFill};\n`;\n\nexport const FormCloseIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${props => props.theme.colors.formTitleColor};\n`;\n\nexport const ValidationError = styled.p`\n  margin-top: 6px;\n  color: #ed4337;\n  font-size: 12px;\n`;\n\nexport const TitleContainer = styled.div`\n  margin-bottom: 24px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { addColumn, editColumn } from '../../store/columns/operations';\nimport sprite from '../../img/icons/sprite.svg';\nimport * as Yup from 'yup';\n\nimport {\n  FormTitle,\n  FormContainer,\n  CloseButton,\n  AddButton,\n  FormInput,\n  FormIconContainer,\n  FormIcon,\n  FormCloseIcon,\n  ValidationError,\n  TitleContainer,\n} from './ColumnForm.styled';\n\nconst ColumnFormSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Please write more than 2 symbol!')\n    .max(32, 'Please write less than 32 symbols!')\n    .required('Required'),\n});\n\nexport const ColumnForm = ({\n  id,\n  boardId,\n  isEditMode,\n  onCloseForm,\n  columnTitle = '',\n}) => {\n  const dispatch = useDispatch();\n  const title = isEditMode ? 'Edit column' : 'Add column';\n  const buttonText = isEditMode ? 'Edit' : 'Add';\n\n  const handleSubmit = ({ title }, { resetForm }) => {\n    if (isEditMode) {\n      dispatch(editColumn({ boardId, id, title }));\n    } else {\n      dispatch(addColumn({ boardId, title }));\n    }\n    resetForm();\n    onCloseForm();\n  };\n\n  return (\n    <FormContainer>\n      <CloseButton type=\"button\" onClick={onCloseForm}>\n        <FormCloseIcon>\n          <use href={`${sprite}#icon-x-close`}></use>\n        </FormCloseIcon>\n      </CloseButton>\n      <FormTitle>{title}</FormTitle>\n      <Formik\n        initialValues={{\n          title: columnTitle,\n        }}\n        validationSchema={ColumnFormSchema}\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <TitleContainer>\n              <FormInput id=\"title\" name=\"title\" placeholder=\"Title\" />\n              {errors.title && touched.title ? (\n                <ValidationError>{errors.title}</ValidationError>\n              ) : null}\n            </TitleContainer>\n            <AddButton type=\"submit\">\n              <FormIconContainer>\n                <FormIcon>\n                  <use href={`${sprite}#icon-plus`}></use>\n                </FormIcon>\n              </FormIconContainer>\n              <div>{buttonText}</div>\n            </AddButton>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { baseTransition } from 'styles';\n\nexport const ColumnContainer = styled.div`\n  max-width: 335px;\n`;\n\nexport const ColumnTitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n  padding: 18px 20px 17px 20px;\n  height: 56px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.card};\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.titleColor};\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 40px;\n  height: 16px;\n`;\n\nexport const TitleIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: ${props => props.theme.colors.iconFill};\n  transition: fill ${baseTransition};\n  &:hover,\n  &:focus {\n    fill: ${props => props.theme.colors.iconHover};\n  }\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AddCardButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  height: 49px;\n  padding: 10px 0px 11px 0px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border-radius: 8px;\n  color: ${props => props.theme.colors.addButtonColor};\n  background: ${props => props.theme.colors.addButtonBackground};\n  transition: background ${baseTransition};\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.addButtonHoverBackground};\n  }\n`;\n\nexport const AddCardIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background: ${props => props.theme.colors.buttonIconBackground};\n  border-radius: 6px;\n`;\n\nexport const AddCardIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: ${props => props.theme.colors.buttonIconFill};\n`;\n","import styled from '@emotion/styled';\n\nexport const CardListContainer = styled.div`\n  max-height: calc(100vh - 312px);\n  height: 100%;\n  min-width: 350px;\n  margin-bottom: 14px;\n\n  @media (min-width: 768px) {\n    max-height: calc(100vh - 356px);\n  }\n\n  @media (min-width: 1440px) {\n    max-height: calc(100vh - 292px);\n  }\n`;\n\nexport const CardListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 335px;\n  min-height: 100%;\n`;\n\nexport const TrackVertical = styled.div`\n  background-color: ${props =>\n    props.theme.colors.columnTrackVerticalBackground};\n  right: 0;\n  bottom: 0;\n  top: 2px;\n  border-radius: 12px;\n  width: 8px !important;\n`;\n\nexport const ThumbVertical = styled.div`\n  border-radius: 12px;\n  background-color: ${props =>\n    props.theme.colors.columnThumbVerticalBackground};\n`;\n","import styled from '@emotion/styled';\nimport { priority } from 'styles';\nimport { baseTransition } from 'styles';\n\nexport const CardStyled = styled.li`\n  position: relative;\n  height: 154px;\n  width: 100%;\n  padding: 14px 24px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.card};\n  overflow: hidden;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 4px;\n    height: 100%;\n    background-color: ${props => priority[props.color]};\n  }\n`;\n\nexport const CardTitleStyled = styled.h3`\n  margin-bottom: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  font-weight: 600;\n  color: ${props => props.theme.colors.cardMajorText};\n`;\n\nexport const CardDescriptionStyled = styled.p`\n  width: 290px;\n  height: 2rem;\n  margin-bottom: 34px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.3333;\n  color: ${props => props.theme.colors.cardMinorText};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nexport const CardFooter = styled.div`\n  position: relative;\n  display: flex;\n  align-items: flex-end;\n  &::before {\n    content: '';\n    position: absolute;\n    top: -14px;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${props => props.theme.colors.cardDecor};\n    z-index: 1;\n  }\n`;\n\nexport const CardParamsWrapper = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const CardParamsTitle = styled.p`\n  margin-bottom: 4px;\n  font-size: 8px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMinorText};\n`;\n\nexport const PriorityStatus = styled.p`\n  position: relative;\n  margin-left: 16px;\n  text-transform: capitalize;\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMajorText};\n  &::before {\n    content: '';\n    position: absolute;\n    top: 1.5px;\n    left: -16px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${props => priority[props.color]};\n  }\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMajorText};\n`;\n\nexport const ToolsWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const ToolsButtonBell = styled.button`\n  position: relative;\n  width: 16px;\n  height: 16px;\n  margin-left: auto;\n  margin-right: 12px;\n  color: #888888;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 30px;\n    transform: translate(-50%, -50%);\n    background-image: ${props =>\n      props.pastDeadline\n        ? 'radial-gradient(circle, red 0%, rgba(255, 0, 0, 0) 70%)'\n        : 'radial-gradient(circle, #bedbb070 0%, #bedbb000 70%)'};\n  }\n`;\n\nexport const ToolsButton = styled.button`\n  width: 16px;\n  height: 16px;\n  color: #888888;\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledDiv = styled.div`\n  width: 350px;\n  height: 522px;\n  background-color: ${props => props.theme.colors.background};\n  margin-top: 10px;\n  margin-left: 10px;\n  border-radius: 10px;\n`;\n\nexport const StyledBtnClose = styled.button`\n  width: 18px;\n  height: 18px;\n  margin-left: 212px;\n`;\n\nexport const StyledP = styled.p`\n  display: inline-block;\n  color: ${props => props.theme.colors.cardMajorText};\n  font-size: 18px;\n  margin-bottom: 24px;\n  margin-top: 24px;\n  margin-left: 24px;\n`;\n\nexport const StyledInput = styled.input`\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.btnAddBoard};\n  opacity: 0.4;\n  background: ${props => props.theme.colors.card};\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  margin-bottom: 10px;\n  margin-left: 20px;\n  padding: 14px 115px 14px 18px;\n  font-size: 14px;\n  border-radius: 4px;\n  color: ${props => props.theme.colors.cardMajorText};\n  :focus-visible {\n    border: 1px solid ${props => props.theme.colors.btnAddBoard};\n    outline: none;\n  }\n`;\n\nexport const StyledTextArea = styled.textarea`\n  resize: none;\n  margin-left: 20px;\n  font-size: 14px;\n  color: ${props => props.theme.colors.cardMajorText};\n  display: flex;\n  padding: 14px 131px 122px 18px;\n  align-items: center;\n  flex-shrink: 0;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.btnAddBoard};\n  opacity: 0.4;\n  background: ${props => props.theme.colors.card};\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  margin-bottom: 24px;\n  :focus-visible {\n    border: 1px solid ${props => props.theme.colors.btnAddBoard};\n    outline: none;\n  }\n`;\n\nexport const StyledTitelBtn = styled.label`\n  color: ${props => props.theme.colors.cardMinorText};\n  font-size: 12px;\n  margin-left: 24px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 24px;\n  width: 302px;\n  padding: 10px 0px 11px 0px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.btnAddBoard};\n`;\n\nexport const Container = styled.div`\n  color: ${props => props.theme.colors.btnAddBoard};\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.btnAddBoard};\n  /* margin-left: 24px; */\n  justify-content: left;\n  align-items: center;\n  display: flex;\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nexport const RadioInput = styled.input`\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    border-radius: 50%;\n    width: ${({ checked }) => (checked ? '10px' : '14px')};\n    height: ${({ checked }) => (checked ? '10px' : '14px')};\n    border: ${({ checked, colors }) => (checked ? '1px' : '0px')} solid\n      ${({ colors }) => colors};\n    background-color: ${({ checked, color }) => (checked ? color : color)};\n    transition: width 0.2s ease, height 0.2s ease; /* Добавляем transition */\n  }\n  &:checked::before {\n    margin-bottom: 3.2px;\n    margin-left: 1.5px;\n    background-color: ${({ checked, color }) => (checked ? color : color)};\n  }\n`;\n\nexport const PlusIconContainer = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n  background-color: ${props => props.theme.colors.card};\n  border-radius: 20%;\n`;\n\nexport const StyledTitleDeadline = styled.div`\n  color: ${props => props.theme.colors.cardMinorText};\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  margin-left: 24px;\n`;\n\nexport const StyledFormikTitleNotification = styled.div`\n  margin-left: 24px;\n  margin-bottom: 5px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const StyledFormikDescriptionNotification = styled.div`\n  margin-top: -15px;\n  margin-left: 24px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const StyledFormikColorNotification = styled.div`\n  margin-top: -5px;\n  margin-left: 24px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n","import React, { useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport styled from '@emotion/styled';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport sprite from '../../img/icons/sprite.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './AddTaskForm.css';\nimport { useDispatch } from 'react-redux';\nimport { editTask } from '../../store/columns/operations';\nimport {\n  StyledP,\n  StyledDiv,\n  StyledInput,\n  StyledTextArea,\n  StyledButton,\n  RadioGroup,\n  RadioInput,\n  RadioLabel,\n  StyledTitelBtn,\n  StyledTitleDeadline,\n  Container,\n  StyledFormikTitleNotification,\n  StyledFormikDescriptionNotification,\n  StyledBtnClose,\n  PlusIconContainer,\n  StyledFormikColorNotification,\n} from './AddTaskForm.styled';\n\nexport const colors = ['#8FA1D0', '#E09CB5', '#BEDBB0', '#808080'];\nconst priorities = [ 'low', 'medium','high' ,'without'];\n\nconst StyledCustomCalendar = styled(DatePicker)`\n  &.custom-datepicker {\n    .react-datepicker-wrapper & .react-datepicker__day--keyboard-selected,\n    .react-datepicker-wrapper & .react-datepicker__day--today,\n    .react-datepicker-wrapper & .react-datepicker__day--weekend {\n      background-color: red !important;\n      color: white !important;\n    }\n\n    .react-datepicker-wrapper & .react-datepicker__day--selected {\n      background-color: red;\n      color: white;\n    }\n  }\n`;\n\nexport const EditTask = ({\n  boardId,\n  columnId,\n  closeModal,\n  title,\n  description,\n  priority,\n  taskId,\n  deadline: initialDeadline, \n}) => {\n  const initialValues = {\n    title: title,\n    description: description,\n    priority: priority,\n  };\n\n   const [deadline, setDeadline] = useState(initialDeadline);\n\n  const dispatch = useDispatch();\n\n  const deadlinePickerRef = useRef(null);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Title is required')\n      .min(1, 'Title must contain at least 3 characters')\n      .max(32, 'Title must not exceed 50 characters'),\n    description: Yup.string()\n      .required('Description is required')\n      .min(1, 'Description must contain at least 10 characters')\n      .max(500, 'Description must not exceed 500 characters'),\n    priority: Yup.string().required('Please select a color'),\n    deadline: Yup.date()\n      .required('Please select a deadline date')\n      .min(new Date(), 'Deadline cannot be earlier than today'),\n  });\n\n  const handleDeadlineClick = () => {\n    if (deadlinePickerRef.current) {\n      deadlinePickerRef.current.setOpen(true);\n    }\n  };\n\n  const CurrentDate = () => {\n    const formattedDate = moment(deadline).format('MMMM D');\n    return <div>Today, {formattedDate}</div>;\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    console.log(values);\n    try {\n      if (!values.deadline) {\n        alert(\"!!!!!!!!\");\n        return;\n      }\n\n      await dispatch(editTask({ ...values, boardId, columnId, taskId }));\n      resetForm();\n      closeModal();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n  });\n\n  const handleDateChange = date => {\n    console.log(date);\n    if (date && date < new Date()) {\n      alert('Deadline cannot be before today.');\n      return;\n    }\n    formik.setFieldValue('deadline', date);\n    setDeadline(date);\n  };\n\n  const formattedDeadline = formik.values.deadline\n    ? moment(formik.values.deadline).format('D MMMM YYYY')\n    : CurrentDate();\n  \nconst updateDeadline = deadline ? new Date(deadline) : null;\n  console.log(deadline)\n  console.log(updateDeadline);\n\n  return (\n    <StyledDiv>\n      <StyledP>Edit Card</StyledP>\n\n      <StyledBtnClose onClick={closeModal}>\n        <svg\n          className=\"icon\"\n          width=\"18\"\n          height=\"18\"\n          aria-hidden=\"true\"\n          role=\"presentation\"\n          fill=\"white\"\n        >\n          <use xlinkHref={`${sprite}#icon-x-close`} />\n        </svg>\n      </StyledBtnClose>\n      <form onSubmit={formik.handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.title && formik.errors.title ? (\n          <StyledFormikTitleNotification>\n            {formik.errors.title}\n          </StyledFormikTitleNotification>\n        ) : null}\n        <StyledTextArea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.description && formik.errors.description ? (\n          <StyledFormikDescriptionNotification>\n            {formik.errors.description}\n          </StyledFormikDescriptionNotification>\n        ) : null}\n        <StyledTitelBtn>Label color</StyledTitelBtn>\n        <br />\n        <RadioGroup>\n          {priorities.map((priority, index) => (\n            <RadioLabel key={index}>\n              <RadioInput\n                type=\"radio\"\n                name=\"priority\"\n                color={colors[index]}\n                value={priority}\n                checked={formik.values.priority === priority}\n                onChange={formik.handleChange}\n              />\n            </RadioLabel>\n          ))}\n        </RadioGroup>\n        {formik.touched.priority && formik.errors.priority ? (\n          <StyledFormikColorNotification>\n            {formik.errors.priority}\n          </StyledFormikColorNotification>\n        ) : null}\n\n        <StyledTitleDeadline>\n          Deadline\n          <Container>\n            {formattedDeadline}\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n              fill=\"#BEDBB0\"\n              onClick={handleDeadlineClick}\n              style={{\n                marginLeft: '5px',\n                cursor: 'pointer',\n              }}\n            >\n              <use xlinkHref={`${sprite}#icon-chevron-down`} />\n            </svg>\n          </Container>\n          <StyledCustomCalendar\n            className=\"custom-datepicker\"\n            ref={deadlinePickerRef}\n            name=\"deadline\"\n            selected={updateDeadline}\n            onChange={handleDateChange}\n            locale=\"en\"\n            dateFormat=\"d MMMM yyyy\"\n            customInput={<div></div>}\n          />\n        </StyledTitleDeadline>\n        <StyledButton type=\"submit\">\n          <PlusIconContainer>\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n              fill=\"white\"\n            >\n              <use xlinkHref={`${sprite}#icon-plus`} />\n            </svg>\n          </PlusIconContainer>\n          Edit\n        </StyledButton>\n      </form>\n    </StyledDiv>\n  );\n};","import {\n  CardDescriptionStyled,\n  CardFooter,\n  CardParamsTitle,\n  CardParamsWrapper,\n  CardStyled,\n  CardTitleStyled,\n  DeadlineDate,\n  PriorityStatus,\n  ToolsButton,\n  ToolsButtonBell,\n  ToolsWrapper,\n} from './Card.styled';\nimport sprite from '../../img/icons/sprite.svg';\nimport { Svg } from 'components/SvgIcon/SvgIcon';\nimport { forwardRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'components/Modal';\nimport { EditTask } from 'components/AddTaskForm/EditTaskForm';\nimport { deleteTask } from '../../store/columns/operations';\nimport moment from 'moment';\n\nexport const Card = forwardRef(({\n    _id,\n    title,\n    description,\n    priority,\n    deadline,\n    boardId,\n    columnId,\n    taskData,\n    ...rest\n  }, ref) => {\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const openEditModal = () => {\n    setIsEditModalOpen(true);\n  };\n\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n  };\n\n  const handleDeleteTaskButtonClick = async () => {\n    await dispatch(deleteTask({ boardId, columnId, taskId: _id }));\n  };\n\n  const formattedDeadline = moment(deadline).format('DD/MM/YYYY');\n\n  return (\n    <CardStyled color={priority} ref={ref} {...rest}>\n      <CardTitleStyled>{title}</CardTitleStyled>\n      <CardDescriptionStyled>{description}</CardDescriptionStyled>\n      <CardFooter>\n        <CardParamsWrapper>\n          <div>\n            <CardParamsTitle>Priority</CardParamsTitle>\n            <PriorityStatus color={priority}>{priority}</PriorityStatus>\n          </div>\n          <div>\n            <CardParamsTitle>Deadline</CardParamsTitle>\n            <DeadlineDate>{formattedDeadline}</DeadlineDate>\n          </div>\n        </CardParamsWrapper>\n        <ToolsButtonBell type=\"button\" pastDeadline={moment(deadline).isBefore(moment())}>\n          <Svg w={16} h={16} use={`${sprite}#icon-bell`} />\n        </ToolsButtonBell>\n        <ToolsWrapper>\n          <ToolsButton type='button' onClick={openEditModal}>\n            <Svg w={16} h={16} use={`${sprite}#icon-pencil`} />\n          </ToolsButton>\n          {isEditModalOpen && (\n            <Modal onClose={closeEditModal}>\n              <EditTask\n                boardId={boardId}\n                columnId={columnId}\n                taskId={_id}\n                taskData={taskData}\n                title={title}\n                description={description}\n                deadline={deadline}\n                priority={priority}\n                closeModal={closeEditModal}\n              />\n            </Modal>\n          )}\n          <ToolsButton type='button' onClick={handleDeleteTaskButtonClick}>\n            <Svg w={16} h={16} use={`${sprite}#icon-trash`} />\n          </ToolsButton>\n        </ToolsWrapper>\n      </CardFooter>\n    </CardStyled>\n  );\n});\n","export const selectStatusFilter = state => state.filters.status;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport {\n  CardListContainer,\n  CardListStyled,\n  TrackVertical,\n  ThumbVertical,\n} from './CardList.styled';\nimport { Card } from './Card';\nimport { selectStatusFilter } from 'store/filter/selectors';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\n\nexport const CardList = ({ boardId, cards, columnId }) => {\n  const status = useSelector(selectStatusFilter);\n  const filteredCards = status.priority\n    ? cards.filter(card => card.priority === status.priority)\n    : cards;\n\n  return (\n    <Droppable droppableId={columnId} type=\"CARD\">\n      {provided => (\n        <CardListContainer {...provided.droppableProps}>\n          <Scrollbars\n            hideTracksWhenNotNeeded={true}\n            renderTrackVertical={({ style, ...props }) => (\n              <TrackVertical\n                {...props}\n                style={{\n                  ...style,\n                }}\n              />\n            )}\n            renderThumbVertical={({ style, ...props }) => (\n              <ThumbVertical\n                {...props}\n                style={{\n                  ...style,\n                }}\n              />\n            )}\n          >\n            <CardListStyled ref={provided.innerRef}>\n              {filteredCards.map(\n                (\n                  { _id, title, description, priority, deadline, owner },\n                  index\n                ) => {\n                  return (\n                    <Draggable key={_id} draggableId={_id} index={index}>\n                      {dragProvided => (\n                        <Card\n                          key={_id}\n                          _id={_id}\n                          ref={dragProvided.innerRef}\n                          title={title}\n                          description={description}\n                          priority={priority}\n                          deadline={deadline}\n                          boardId={boardId}\n                          columnId={owner}\n                          {...dragProvided.draggableProps}\n                          {...dragProvided.dragHandleProps}\n                        />\n                      )}\n                    </Draggable>\n                  );\n                }\n              )}\n            </CardListStyled>\n          </Scrollbars>\n          {provided.placeholder}\n        </CardListContainer>\n      )}\n    </Droppable>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport styled from '@emotion/styled';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport sprite from '../../img/icons/sprite.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './AddTaskForm.css';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../../store/columns/operations';\nimport {\n  StyledP,\n  StyledDiv,\n  StyledInput,\n  StyledTextArea,\n  StyledButton,\n  RadioGroup,\n  RadioInput,\n  RadioLabel,\n  StyledTitelBtn,\n  StyledTitleDeadline,\n  Container,\n  StyledFormikTitleNotification,\n  StyledFormikDescriptionNotification,\n  StyledBtnClose,\n  PlusIconContainer,\n  StyledFormikColorNotification,\n} from './AddTaskForm.styled';\n\nexport const colors = ['#8FA1D0', '#E09CB5', '#BEDBB0', '#808080'];\nconst priorities = ['low', 'medium', 'high', 'without'];\n\nconst StyledCustomCalendar = styled(DatePicker)`\n  &.custom-datepicker {\n    .react-datepicker-wrapper & .react-datepicker__day--keyboard-selected,\n    .react-datepicker-wrapper & .react-datepicker__day--today,\n    .react-datepicker-wrapper & .react-datepicker__day--weekend {\n      background-color: red !important;\n      color: white !important;\n    }\n\n    .react-datepicker-wrapper & .react-datepicker__day--selected {\n      background-color: red;\n      color: white;\n    }\n  }\n`;\n\nconst initialValues = {\n  title: '',\n  description: '',\n  priority: '',\n};\n\nexport const AddTasks = ({ boardId, columnId, closeModal, taskId }) => {\n  const [deadline, setDeadline] = useState(new Date());\n  const [showDateNotification, setShowDateNotification] = useState(true);\n  const dispatch = useDispatch();\n  const deadlinePickerRef = useRef(null);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Title is required')\n      .min(1, 'Title must contain at least 3 characters')\n      .max(32, 'Title must not exceed 50 characters'),\n    description: Yup.string()\n      .required('Description is required')\n      .min(1, 'Description must contain at least 10 characters')\n      .max(500, 'Description must not exceed 500 characters'),\n    priority: Yup.string().required('Please select a color'),\n    deadline: Yup.date()\n      .nullable()\n      .required('Please select a deadline date')\n      .min(new Date(), 'Deadline cannot be earlier than today')\n      .test('future', 'Please select a future date', value => {\n        const currentDate = new Date();\n        return value && value > currentDate;\n      }),\n  });\n\n  const handleDeadlineClick = () => {\n    if (deadlinePickerRef.current) {\n      deadlinePickerRef.current.setOpen(true);\n    }\n  };\n\n  const CurrentDate = () => {\n    const formattedDate = moment().format('MMMM D');\n    return <div>Today, {formattedDate}</div>;\n  };\n\n  const formattedDeadline = deadline\n    ? moment(deadline).format('D MMMM YYYY')\n    : CurrentDate();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      setDeadline(values.deadline);\n      await dispatch(addTask({ ...values, boardId, columnId, taskId }));\n      resetForm();\n      setDeadline('');\n      closeModal();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleDateChange = date => {\n    if (date && date < new Date()) {\n      alert('Deadline cannot be before today.');\n      return;\n    }\n    if (date !== new Date()) {\n      setShowDateNotification(false);\n    }\n    formik.setFieldValue('deadline', date);\n    setDeadline(date);\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n  });\n\n  return (\n    <StyledDiv>\n      <StyledP>Add Card</StyledP>\n\n      <StyledBtnClose onClick={closeModal}>\n        <svg\n          className=\"icon\"\n          width=\"18\"\n          height=\"18\"\n          aria-hidden=\"true\"\n          role=\"presentation\"\n          fill=\"white\"\n        >\n          <use xlinkHref={`${sprite}#icon-x-close`} />\n        </svg>\n      </StyledBtnClose>\n      <form onSubmit={formik.handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.title && formik.errors.title ? (\n          <StyledFormikTitleNotification>\n            {formik.errors.title}\n          </StyledFormikTitleNotification>\n        ) : null}\n        <StyledTextArea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.description && formik.errors.description ? (\n          <StyledFormikDescriptionNotification>\n            {formik.errors.description}\n          </StyledFormikDescriptionNotification>\n        ) : null}\n        <StyledTitelBtn>Label color</StyledTitelBtn>\n        <br />\n        <RadioGroup>\n          {priorities.map((priority, index) => (\n            <RadioLabel key={index}>\n              <RadioInput\n                type=\"radio\"\n                name=\"priority\"\n                color={colors[index]}\n                value={priority}\n                checked={formik.values.priority === priority}\n                onChange={formik.handleChange}\n              />\n            </RadioLabel>\n          ))}\n        </RadioGroup>\n        {formik.touched.priority && formik.errors.priority ? (\n          <StyledFormikColorNotification>\n            {formik.errors.priority}\n          </StyledFormikColorNotification>\n        ) : null}\n\n        <StyledTitleDeadline>\n          Deadline\n          <Container>\n            {formattedDeadline}\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n              fill=\"#BEDBB0\"\n              onClick={handleDeadlineClick}\n              style={{\n                marginLeft: '5px',\n                cursor: 'pointer',\n              }}\n            >\n              <use xlinkHref={`${sprite}#icon-chevron-down`} />\n            </svg>\n            {showDateNotification && (\n              <p style={{ marginLeft: 16 }}>Please select date</p>\n            )}\n            {/* {showDateNotification && (\n    <div style={{ marginLeft: '5px', color: 'white', fontSize: '12px' }}>\n      Please select a deadline date\n    </div>\n  )} */}\n          </Container>\n          {formik.touched.deadline && formik.errors.deadline ? (\n            <div>{formik.errors.deadline}</div>\n          ) : null}\n          <StyledCustomCalendar\n            className=\"custom-datepicker\"\n            ref={deadlinePickerRef}\n            name=\"deadline\"\n            selected={deadline || undefined}\n            onChange={handleDateChange}\n            locale=\"en\"\n            dateFormat=\"d MMMM yyyy\"\n            showTimeSelect={false}\n            customInput={<div></div>}\n          />\n        </StyledTitleDeadline>\n        <StyledButton type=\"submit\">\n          <PlusIconContainer>\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n              fill=\"white\"\n            >\n              <use xlinkHref={`${sprite}#icon-plus`} />\n            </svg>\n          </PlusIconContainer>\n          Add\n        </StyledButton>\n      </form>\n    </StyledDiv>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { deleteColumn } from '../../store/columns/operations';\nimport sprite from '../../img/icons/sprite.svg';\nimport { useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport { ColumnForm } from '../../components/MainDashboard';\n\nimport {\n  ColumnContainer,\n  ColumnTitleContainer,\n  ColumnTitle,\n  IconContainer,\n  TitleIcon,\n  IconButton,\n  AddCardButton,\n  AddCardIconContainer,\n  AddCardIcon,\n} from './Column.styled';\nimport { CardList } from 'components/Card/CardList';\nimport { AddTasks } from 'components/AddTaskForm/AddTaskForm';\n\nexport const Column = ({ _id, title, createdAt, cards, owner, index }) => {\n  const [isEditCardMode, setIsEditCardMode] = useState(false);\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const dispatch = useDispatch();\n  const hasCards = cards && cards.length > 0;\n\n  const handleDeleteButtonClick = async () => {\n    if (hasCards) {\n      Notify.warning(\n        'It is impossible to remove column when exists one or more cards.'\n      );\n      return;\n    }\n    await dispatch(deleteColumn({ boardId: owner, columnId: _id }));\n  };\n\n  const handleAddCardButtonClick = () => {\n    setIsEditCardMode(false);\n    openModal();\n  };\n\n  const handleEditCardButtonClick = () => {\n    setIsEditCardMode(true);\n    openModal();\n  };\n\n  return (\n    <Draggable draggableId={_id} index={index}>\n      {(provided) => (\n        <ColumnContainer ref={provided.innerRef} {...provided.draggableProps}>\n          <ColumnTitleContainer {...provided.dragHandleProps}>\n            <ColumnTitle>{title}</ColumnTitle>\n            <IconContainer>\n              <IconButton\n                type=\"button\"\n                onClick={() => handleEditCardButtonClick(openModal)}\n              >\n                <TitleIcon>\n                  <use href={`${sprite}#icon-pencil`}></use>\n                </TitleIcon>\n              </IconButton>\n              <IconButton type=\"button\" onClick={handleDeleteButtonClick}>\n                <TitleIcon>\n                  <use href={`${sprite}#icon-trash`}></use>\n                </TitleIcon>\n              </IconButton>\n            </IconContainer>\n          </ColumnTitleContainer>\n          {cards && <CardList boardId={owner} columnId={_id} cards={cards} />}\n          <AddCardButton onClick={handleAddCardButtonClick}>\n            <AddCardIconContainer>\n              <AddCardIcon>\n                <use href={`${sprite}#icon-plus`}></use>\n              </AddCardIcon>\n            </AddCardIconContainer>\n            <div>Add another card</div>\n          </AddCardButton>\n          {isModalOpen && isEditCardMode && (\n            <Modal onClose={closeModal}>\n              <ColumnForm\n                id={_id}\n                boardId={owner}\n                onCloseForm={closeModal}\n                columnTitle={title}\n                isEditMode={true}\n              />\n            </Modal>\n          )}\n          {isModalOpen && !isEditCardMode && (\n            <Modal onClose={closeModal}>\n              <AddTasks boardId={owner} columnId={_id} closeModal={closeModal} />\n            </Modal>\n          )}\n        </ColumnContainer>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ColumnListStyled = styled.ul`\n  display: flex;\n  gap: 34px;\n  margin-right: 34px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { Column } from '../MainDashboard/Column';\nimport { ColumnListStyled } from './ColunmList.styled';\nimport { selectColumns, selectIsLoading } from 'store/columns/selectors';\nimport { getColumns } from 'store/columns/operations';\nimport { Loader } from '../Loader/Loader';\nimport { columnsActions } from '../../store/columns/slice';\n\nexport const ColumnList = ({ boardId }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    if (!boardId) {\n      return;\n    }\n    dispatch(getColumns(boardId));\n  }, [boardId, dispatch]);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    if (!destination || (source.droppableId === destination.droppableId &&\n      source.index === destination.index)) {\n      return;\n    }\n\n    if (result.type === 'COLUMN') {\n      dispatch(columnsActions.moveColumns({ sourceIndex: source.index, destinationIndex: destination.index }));\n      return;\n    }\n\n    dispatch(columnsActions.moveCards({ source, destination }));\n  };\n\n  if (isLoading) {\n    return <Loader fill={'#fff'} />;\n  }\n  if (columns.length > 0) {\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable\n          droppableId={boardId}\n          type='COLUMN'\n          direction='horizontal'\n        >\n          {(provided) =>\n            <ColumnListStyled ref={provided.innerRef} {...provided.droppableProps}>\n              {columns.map(({ _id, title, createdAt, owner, cards }, index) => (\n                <Column\n                  key={_id}\n                  index={index}\n                  owner={owner}\n                  _id={_id}\n                  title={title}\n                  createdAt={createdAt}\n                  cards={cards}\n                />\n              ))}\n              {provided.placeholder}\n            </ColumnListStyled>}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n};\n","import styled from '@emotion/styled';\nimport { baseTransition } from 'styles';\n\nexport const CreateBoardContainer = styled.div`\n  margin: auto;\n  text-align: center;\n  color: ${props => props.theme.colors.createBoardContainerColor};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2;\n  letter-spacing: -0.28px;\n\n  @media (min-width: 768px) {\n    max-width: 486px;\n  }\n`;\n\nexport const CreateBoardButton = styled.button`\n  color: ${props => props.theme.colors.formAddButtonBackground};\n  font-family: Poppins;\n  transition: color ${baseTransition};\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.formAddButtonHover};\n  }\n`;\n","import React from 'react';\nimport { Modal } from '../Modal/Modal';\nimport { useModal } from 'hooks/useModal';\nimport NewBoard from 'components/NewBoard/NewBoard';\n\nimport { CreateBoardContainer, CreateBoardButton } from './CreateBoard.styled';\n\nconst CreateBoard = () => {\n  const { isModalOpen, openModal, closeModal } = useModal();\n  return (\n    <>\n      <CreateBoardContainer>\n        Before starting your project, it is essential{' '}\n        <CreateBoardButton type=\"button\" onClick={openModal}>\n          to create a board\n        </CreateBoardButton>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </CreateBoardContainer>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <NewBoard onClick={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default CreateBoard;\n","import styled from '@emotion/styled';\nimport { baseTransition } from 'styles';\n\nexport const MainDashboardSection = styled.section`\n  position: relative;\n  background-color: ${props => props.theme.colors.background};\n  background-image: ${props =>\n    props.background !== 'default'\n      ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Mobile/${props.background}.jpg\")`\n      : 'none'};\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Mobile/${props.background}%402x.jpg\")`\n        : 'none'};\n  }\n\n  @media (min-width: 768px) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Tablet/${props.background}.jpg\")`\n        : 'none'};\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== 'default'\n          ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Tablet/${props.background}%402x.jpg\")`\n          : 'none'};\n    }\n  }\n\n  @media (min-width: 1440px) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Desktop/${props.background}.jpg\")`\n        : 'none'};\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== 'default'\n          ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Desktop/${props.background}.jpg\")`\n          : 'none'};\n    }\n  }\n`;\n\nexport const MainDashboardContainer = styled.div`\n  min-height: calc(100vh - 64px);\n  height: 100%;\n  padding: 74px 0 24px 0;\n  overflow-x: auto;\n  display: flex;\n\n  @media (min-width: 768px) {\n    gap: 34px;\n    padding: 80px 0 52px 0;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 48px 0 16px 0;\n  }\n`;\n\nexport const MainDashboardSectionTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const MainDashboardAddColumnButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 335px;\n  height: 56px;\n  padding: 14px 78px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border-radius: 8px;\n  color: ${props => props.theme.colors.addColumnButtonColor};\n  background-color: ${props => props.theme.colors.addColumnButtonBackground};\n  transition: background ${baseTransition};\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.addColumnButtonHoverBackground};\n  }\n`;\n\nexport const MainDashboardIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.colors.iconContainerBackground};\n  border-radius: 6px;\n`;\n\nexport const MainDashboardIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: ${props => props.theme.colors.addColumnIconFill};\n`;\n\nexport const FilterContainer = styled.div`\n  position: absolute;\n  width: 100%;\n`;\n\nexport const ContentHolder = styled.div`\n  width: 100%;\n`;\n\nexport const ContentWrapper = styled.div`\n  width: max-content;\n  height: 100%;\n  display: flex;\n  margin-left: 20px;\n\n  @media (min-width: 768px) {\n    margin-left: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-left: 24px;\n  }\n`;\n\nexport const TrackHorizontal = styled.div`\n  min-height: 12px;\n  border-radius: 12px;\n  bottom: 0;\n  left: 20px;\n  right: 20px;\n  @media (min-width: 768px) {\n    left: 32px;\n    right: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    left: 24px;\n    right: 24px;\n  }\n  background-color: ${props =>\n    props.theme.colors.mainTrackHorizontalBackground};\n`;\n\nexport const ThumbHorizontal = styled.div`\n  height: 12px;\n  border-radius: 12px;\n  background-color: ${props =>\n    props.theme.colors.mainThumbHorizontalBackground};\n`;\n","import styled from '@emotion/styled';\n\nimport { baseTransition } from 'styles';\n\nexport const FilterButton = styled.button`\n  position: relative;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  padding-left: 22px;\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.filterBtnColorSelected\n      : props.theme.colors.filterBtnColor};\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.text === 'Without priority'\n        ? props.theme.colors.filterWithoutPriorityColor\n        : props.color};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 1px;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: ${props => props.theme.colors.filterDecorativeElement};\n    opacity: ${props => (props.selected ? '1' : ' 0')};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { FilterButton } from './StatusFilterButton.styled';\n\nconst StatusFilterButton = ({ selected, color, children, onClick }) => {\n  return (\n    <FilterButton\n      selected={selected}\n      type=\"button\"\n      onClick={onClick}\n      color={color}\n      text={children}\n    >\n      {children}\n    </FilterButton>\n  );\n};\n\nStatusFilterButton.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  color: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StatusFilterButton;\n","import styled from '@emotion/styled';\n\nimport { baseTransition } from 'styles';\n\nexport const StatusFilterContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 234px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.filterContainerBackground};\n  padding: 24px;\n  box-shadow: ${props => props.theme.colors.filterContainerShadow};\n`;\n\nexport const StatusFilterMainText = styled.p`\n  color: ${props => props.theme.colors.titleColor};\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  width: 100%;\n  padding-bottom: 14px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 14px;\n`;\n\nexport const StatusFilterBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const StatusFilterLabel = styled.p`\n  color: ${props => props.theme.colors.titleColor};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const StatusFilterShowAll = styled.button`\n  cursor: pointer;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.filterBtnColorSelected\n      : props.theme.colors.filterBtnColor};\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n`;\n\nexport const StatusFilterItem = styled.li`\n  &:not(:last-of-type) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n  fill: ${props => props.theme.colors.closeModalBtn};\n  transition: fill ${baseTransition};\n\n  &:hover,\n  &:focus {\n    fill: ${props => props.theme.colors.closeModalBtnHover};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectStatusFilter } from 'store/filter/selectors';\nimport { statusFilters } from 'store/filter/constants';\nimport { setStatusFilter } from 'store/filter/filterSlice';\nimport StatusFilterButton from 'components/StatusFilterButton';\nimport sprite from '../../img/icons/sprite.svg';\n\nimport {\n  StatusFilterContainer,\n  StatusFilterMainText,\n  StatusFilterLabel,\n  StatusFilterBox,\n  StatusFilterShowAll,\n  CloseButton,\n  StatusFilterItem,\n} from './StatusFilter.styled';\n\nconst options = [\n  {\n    text: 'Without priority',\n    color: 'rgba(255, 255, 255, 0.3)',\n  },\n  {\n    text: 'Low',\n    color: 'rgba(143, 161, 208, 1)',\n  },\n  {\n    text: 'Medium',\n    color: 'rgba(224, 156, 181, 1)',\n  },\n  {\n    text: 'High',\n    color: 'rgba(190, 219, 176, 1)',\n  },\n];\n\nconst StatusFilter = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  const onChangeFilterClick = text => {\n    switch (text) {\n      case 'Without priority':\n        return handleFilterChange(statusFilters.none);\n      case 'Show all':\n        return handleFilterChange(statusFilters.all);\n      case 'Low':\n        return handleFilterChange(statusFilters.low);\n      case 'Medium':\n        return handleFilterChange(statusFilters.medium);\n      case 'High':\n        return handleFilterChange(statusFilters.high);\n      default:\n        return;\n    }\n  };\n\n  const path = '#icon-x-close';\n  const filter = useSelector(selectStatusFilter);\n\n  return (\n    <StatusFilterContainer>\n      <CloseButton onClick={() => onClose()}>\n        <svg width={18} height={18}>\n          <use href={`${sprite}${path}`}></use>\n        </svg>\n      </CloseButton>\n      <StatusFilterMainText>Filter</StatusFilterMainText>\n      <StatusFilterBox>\n        <StatusFilterLabel>Label color</StatusFilterLabel>\n\n        <StatusFilterShowAll\n          type=\"button\"\n          selected={!filter.priority}\n          onClick={() => onChangeFilterClick('Show all')}\n        >\n          Show all\n        </StatusFilterShowAll>\n      </StatusFilterBox>\n      <ul>\n        {options.map(({ text, color }, index) => (\n          <StatusFilterItem key={index}>\n            <StatusFilterButton\n              selected={filter.statusText === text}\n              onClick={() => onChangeFilterClick(text)}\n              color={color}\n            >\n              {text}\n            </StatusFilterButton>\n          </StatusFilterItem>\n        ))}\n      </ul>\n    </StatusFilterContainer>\n  );\n};\n\nStatusFilter.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default StatusFilter;\n","import styled from '@emotion/styled';\n\nimport { devices, baseTransition } from 'styles';\n\nexport const DashboardHeaderTitle = styled.h2`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  color: ${props => props.theme.colors.titleColor};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  @media ${devices.tablet} {\n    font-size: 18px;\n    letter-spacing: -0.36px;\n    top: 26px;\n    left: 32px;\n  }\n\n  @media ${devices.desktop} {\n    top: 10px;\n  }\n`;\n\nexport const DashboardHeaderFilter = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: ${props => props.theme.colors.filterColor};\n  transition: color ${baseTransition};\n\n  @media ${devices.tablet} {\n    top: 20px;\n    right: 32px;\n  }\n\n  @media ${devices.desktop} {\n    top: 14px;\n    right: 24px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => {\n      if (props.disabled) return;\n      return props.theme.colors.iconHover;\n    }};\n  }\n`;\n\nexport const DashboardHeaderText = styled.p`\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n","import { useModal } from 'hooks/useModal';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from 'components/Modal/Modal';\nimport StatusFilter from 'components/StatusFilter';\nimport sprite from '../../img/icons/sprite.svg';\nimport { Svg } from 'components/SvgIcon/SvgIcon';\n\nimport {\n  DashboardHeaderFilter,\n  DashboardHeaderText,\n  DashboardHeaderTitle,\n} from './DashboardHeader.styled';\n\nconst DashboardHeader = ({ name, disabled }) => {\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const iconName = '#icon-filter';\n  return (\n    <>\n      {name && <DashboardHeaderTitle>{name}</DashboardHeaderTitle>}\n\n      <DashboardHeaderFilter\n        type=\"button\"\n        onClick={openModal}\n        disabled={disabled}\n      >\n        <Svg w={16} h={16} use={`${sprite}${iconName}`} />\n        <DashboardHeaderText>Filters</DashboardHeaderText>\n      </DashboardHeaderFilter>\n\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <StatusFilter onClose={closeModal}></StatusFilter>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nDashboardHeader.propTypes = {\n  name: PropTypes.string,\n  disabled: PropTypes.bool.isRequired,\n};\n\nexport default DashboardHeader;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport { ColumnForm } from '../../components/MainDashboard';\nimport { ColumnList } from '../../components/MainDashboard/ColunmList';\nimport CreateBoard from '../../components/MainDashboard/CreateBoard';\nimport sprite from '../../img/icons/sprite.svg';\nimport {\n  MainDashboardContainer,\n  MainDashboardSection,\n  MainDashboardSectionTitle,\n  MainDashboardAddColumnButton,\n  MainDashboardIconContainer,\n  MainDashboardIcon,\n  FilterContainer,\n  ContentHolder,\n  ContentWrapper,\n  TrackHorizontal,\n  ThumbHorizontal,\n} from './MainDashboard.styled';\nimport DashboardHeader from 'components/DashboardHeader/DashboardHeader';\nimport { selectBoardsState } from 'store/boards/selectors';\nimport { selectColumns } from 'store/columns/selectors';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nconst MainDashboard = () => {\n  const { boardName } = useParams();\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const { boards } = useSelector(selectBoardsState);\n  const selectedBoard = boardName\n    ? boards.find(board => board.title === boardName.trim())\n    : null;\n\n  const columns = useSelector(selectColumns);\n  const hasCards = columns.some(column => column.cards.length > 0);\n\n  return (\n    <MainDashboardSection background={selectedBoard?.background || 'default'}>\n      <FilterContainer>\n        <DashboardHeader name={selectedBoard?.title} disabled={!hasCards} />\n      </FilterContainer>\n      <MainDashboardContainer>\n        {boardName ? (\n          <>\n            <MainDashboardSectionTitle>\n              Columns with tasks\n            </MainDashboardSectionTitle>\n            <ContentHolder>\n              <Scrollbars\n                hideTracksWhenNotNeeded={true}\n                renderTrackHorizontal={({ style, ...props }) => (\n                  <TrackHorizontal\n                    {...props}\n                    style={{\n                      ...style,\n                    }}\n                  />\n                )}\n                renderThumbHorizontal={({ style, ...props }) => (\n                  <ThumbHorizontal\n                    {...props}\n                    style={{\n                      ...style,\n                    }}\n                  />\n                )}\n              >\n                <ContentWrapper>\n                  <ColumnList boardId={selectedBoard?._id} />\n                  <MainDashboardAddColumnButton\n                    type=\"button\"\n                    onClick={openModal}\n                  >\n                    <MainDashboardIconContainer>\n                      <MainDashboardIcon>\n                        <use href={`${sprite}#icon-plus`}></use>\n                      </MainDashboardIcon>\n                    </MainDashboardIconContainer>\n                    <div>Add another column</div>\n                  </MainDashboardAddColumnButton>\n                </ContentWrapper>\n              </Scrollbars>\n            </ContentHolder>\n            {isModalOpen && (\n              <Modal onClose={closeModal}>\n                <ColumnForm\n                  onCloseForm={closeModal}\n                  boardId={selectedBoard?._id}\n                />\n              </Modal>\n            )}\n          </>\n        ) : (\n          <CreateBoard />\n        )}\n      </MainDashboardContainer>\n    </MainDashboardSection>\n  );\n};\n\nexport default MainDashboard;\n"],"names":["FormTitle","styled","props","theme","colors","formTitleColor","FormContainer","formBackgroundColor","formBorderColor","FormInput","Field","formInputColor","formInputBackground","formInputBorderColor","baseTransition","CloseButton","AddButton","formAddButtonColor","formAddButtonBackground","formAddButtonHover","FormIconContainer","formIconContainerBackground","FormIcon","formIconAddButtonFill","FormCloseIcon","ValidationError","TitleContainer","ColumnFormSchema","Yup","shape","title","min","max","required","ColumnForm","id","boardId","isEditMode","onCloseForm","columnTitle","dispatch","useDispatch","buttonText","type","onClick","href","sprite","initialValues","validationSchema","onSubmit","values","actions","resetForm","editColumn","addColumn","handleSubmit","errors","touched","name","placeholder","ColumnContainer","ColumnTitleContainer","card","ColumnTitle","titleColor","IconContainer","TitleIcon","iconFill","iconHover","IconButton","AddCardButton","addButtonColor","addButtonBackground","addButtonHoverBackground","AddCardIconContainer","buttonIconBackground","AddCardIcon","buttonIconFill","CardListContainer","CardListStyled","TrackVertical","columnTrackVerticalBackground","ThumbVertical","columnThumbVerticalBackground","CardStyled","priority","color","CardTitleStyled","cardMajorText","CardDescriptionStyled","cardMinorText","CardFooter","cardDecor","CardParamsWrapper","CardParamsTitle","PriorityStatus","DeadlineDate","ToolsWrapper","ToolsButtonBell","pastDeadline","ToolsButton","StyledDiv","background","StyledBtnClose","StyledP","StyledInput","btnAddBoard","StyledTextArea","StyledTitelBtn","StyledButton","Container","RadioGroup","RadioLabel","RadioInput","checked","PlusIconContainer","StyledTitleDeadline","StyledFormikTitleNotification","btnAddColumn","StyledFormikDescriptionNotification","StyledFormikColorNotification","priorities","StyledCustomCalendar","DatePicker","EditTask","columnId","closeModal","description","taskId","initialDeadline","deadline","useState","setDeadline","deadlinePickerRef","useRef","Date","console","log","alert","editTask","error","formik","useFormik","formattedDeadline","moment","format","formattedDate","CurrentDate","updateDeadline","className","width","height","role","fill","xlinkHref","value","onChange","handleChange","map","index","current","setOpen","style","marginLeft","cursor","ref","selected","date","setFieldValue","locale","dateFormat","customInput","Card","forwardRef","_id","taskData","rest","isEditModalOpen","setIsEditModalOpen","closeEditModal","handleDeleteTaskButtonClick","deleteTask","isBefore","w","h","use","Modal","onClose","selectStatusFilter","state","filters","status","CardList","cards","useSelector","filteredCards","filter","droppableId","provided","droppableProps","hideTracksWhenNotNeeded","renderTrackVertical","renderThumbVertical","innerRef","owner","draggableId","dragProvided","draggableProps","dragHandleProps","AddTasks","showDateNotification","setShowDateNotification","nullable","test","currentDate","addTask","undefined","showTimeSelect","Column","createdAt","isEditCardMode","setIsEditCardMode","useModal","isModalOpen","openModal","hasCards","length","handleDeleteButtonClick","Notify","deleteColumn","handleAddCardButtonClick","ColumnListStyled","ColumnList","columns","selectColumns","isLoading","selectIsLoading","useEffect","getColumns","Loader","onDragEnd","result","source","destination","columnsActions","sourceIndex","destinationIndex","direction","CreateBoardContainer","createBoardContainerColor","CreateBoardButton","NewBoard","MainDashboardSection","MainDashboardContainer","MainDashboardSectionTitle","MainDashboardAddColumnButton","addColumnButtonColor","addColumnButtonBackground","addColumnButtonHoverBackground","MainDashboardIconContainer","iconContainerBackground","MainDashboardIcon","addColumnIconFill","FilterContainer","ContentHolder","ContentWrapper","TrackHorizontal","mainTrackHorizontalBackground","ThumbHorizontal","mainThumbHorizontalBackground","FilterButton","filterBtnColorSelected","filterBtnColor","text","filterWithoutPriorityColor","filterDecorativeElement","children","StatusFilterContainer","filterContainerBackground","filterContainerShadow","StatusFilterMainText","StatusFilterBox","StatusFilterLabel","StatusFilterShowAll","StatusFilterItem","closeModalBtn","closeModalBtnHover","options","handleFilterChange","setStatusFilter","onChangeFilterClick","statusFilters","statusText","DashboardHeaderTitle","devices","DashboardHeaderFilter","filterColor","disabled","DashboardHeaderText","boardName","useParams","boards","selectBoardsState","selectedBoard","find","board","trim","some","column","renderTrackHorizontal","renderThumbHorizontal"],"sourceRoot":""}