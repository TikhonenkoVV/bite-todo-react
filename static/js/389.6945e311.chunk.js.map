{"version":3,"file":"static/js/389.6945e311.chunk.js","mappings":"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","sources":["components/MainDashboard/ColumnForm.styled.js","components/MainDashboard/ColumnForm.jsx","components/MainDashboard/Column.styled.js","components/Card/CardList.styled.js","components/Card/Card.styled.js","components/AddTaskForm/AddTaskForm.styled.js","components/AddTaskForm/EditTaskForm.jsx","components/Card/Card.jsx","store/filter/selectors.js","components/Card/CardList.jsx","components/AddTaskForm/AddTaskForm.jsx","components/MainDashboard/Column.jsx","components/MainDashboard/ColunmList.styled.js","components/MainDashboard/ColunmList.jsx","components/MainDashboard/CreateBoard.styled.js","components/MainDashboard/CreateBoard.jsx","pages/MainDashboard/MainDashboard.styled.js","components/StatusFilterButton/StatusFilterButton.styled.js","components/StatusFilterButton/StatusFilterButton.jsx","components/StatusFilter/StatusFilter.styled.js","components/StatusFilter/StatusFilter.jsx","components/DashboardHeader/DashboardHeader.styled.js","components/DashboardHeader/DashboardHeader.jsx","pages/MainDashboard/MainDashboard.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { baseTransition, devices } from 'styles';\n\nexport const FormTitle = styled.p`\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  color: ${props => props.theme.colors.formTitleColor};\n`;\n\nexport const FormContainer = styled.div`\n  position: relative;\n  max-width: 335px;\n  padding: 24px;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.formBackgroundColor};\n  border: 1px solid ${props => props.theme.colors.formBorderColor};\n  @media screen and (${devices.tablet}) {\n    min-width: 350px;\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  font-size: 14px;\n  font-weight: 400;\n  color: ${props => props.theme.colors.formInputColor};\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: ${props => props.theme.colors.formInputBackground};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.formInputBorderColor};\n  opacity: 0.4;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    outline: none;\n  }\n\n  transition: background ${baseTransition};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  height: 49px;\n  padding: 10px 0px 11px 0px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.formAddButtonColor};\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.formAddButtonBackground};\n  transition: background ${baseTransition};\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.formAddButtonHover};\n  }\n`;\n\nexport const FormIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.colors.formIconContainerBackground};\n  border-radius: 6px;\n`;\n\nexport const FormIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: ${props => props.theme.colors.formIconAddButtonFill};\n`;\n\nexport const FormCloseIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${props => props.theme.colors.formTitleColor};\n`;\n\nexport const ValidationError = styled.p`\n  margin-top: 6px;\n  color: #ed4337;\n  font-size: 12px;\n`;\n\nexport const TitleContainer = styled.div`\n  margin-bottom: 24px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { addColumn, editColumn } from '../../store/columns/operations';\nimport sprite from '../../img/icons/sprite.svg';\nimport * as Yup from 'yup';\n\nimport {\n  FormTitle,\n  FormContainer,\n  CloseButton,\n  AddButton,\n  FormInput,\n  FormIconContainer,\n  FormIcon,\n  FormCloseIcon,\n  ValidationError,\n  TitleContainer,\n} from './ColumnForm.styled';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'store/columns/selectors';\n\nconst ColumnFormSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Please write more than 2 symbol!')\n    .max(32, 'Please write less than 32 symbols!')\n    .required('Required'),\n});\n\nexport const ColumnForm = ({\n  id,\n  boardId,\n  isEditMode,\n  onCloseForm,\n  columnTitle = '',\n}) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const index = columns.length;\n  const title = isEditMode ? 'Edit column' : 'Add column';\n  const buttonText = isEditMode ? 'Edit' : 'Add';\n\n  const handleSubmit = ({ title }, { resetForm }) => {\n    if (isEditMode) {\n      dispatch(editColumn({ boardId, id, title, index }));\n    } else {\n      dispatch(addColumn({ boardId, title, index }));\n    }\n    resetForm();\n    onCloseForm();\n  };\n\n  return (\n    <FormContainer>\n      <CloseButton type=\"button\" onClick={onCloseForm}>\n        <FormCloseIcon>\n          <use href={`${sprite}#icon-x-close`}></use>\n        </FormCloseIcon>\n      </CloseButton>\n      <FormTitle>{title}</FormTitle>\n      <Formik\n        initialValues={{\n          title: columnTitle,\n        }}\n        validationSchema={ColumnFormSchema}\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <TitleContainer>\n              <FormInput id=\"title\" name=\"title\" placeholder=\"Title\" />\n              {errors.title && touched.title ? (\n                <ValidationError>{errors.title}</ValidationError>\n              ) : null}\n            </TitleContainer>\n            <AddButton type=\"submit\">\n              <FormIconContainer>\n                <FormIcon>\n                  <use href={`${sprite}#icon-plus`}></use>\n                </FormIcon>\n              </FormIconContainer>\n              <div>{buttonText}</div>\n            </AddButton>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { baseTransition } from 'styles';\n\nexport const ColumnContainer = styled.div`\n  max-width: 335px;\n`;\n\nexport const ColumnTitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n  padding: 18px 20px 17px 20px;\n  height: 56px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.card};\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.titleColor};\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 40px;\n  height: 16px;\n`;\n\nexport const TitleIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: ${props => props.theme.colors.iconFill};\n  transition: fill ${baseTransition};\n  &:hover,\n  &:focus {\n    fill: ${props => props.theme.colors.iconHover};\n  }\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AddCardButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  height: 49px;\n  padding: 10px 0px 11px 0px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border-radius: 8px;\n  color: ${props => props.theme.colors.addButtonColor};\n  background: ${props => props.theme.colors.addButtonBackground};\n  transition: background ${baseTransition};\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.addButtonHoverBackground};\n  }\n`;\n\nexport const AddCardIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background: ${props => props.theme.colors.buttonIconBackground};\n  border-radius: 6px;\n`;\n\nexport const AddCardIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: ${props => props.theme.colors.buttonIconFill};\n`;\n","import styled from '@emotion/styled';\nimport { devices } from 'styles';\n\nexport const CardListContainer = styled.div`\n  max-height: calc(100svh - 336px);\n  height: 100%;\n  min-width: 350px;\n  margin-bottom: 14px;\n\n  @media screen and (${devices.tablet}) {\n    max-height: calc(100svh - 356px);\n  }\n\n  @media screen and (${devices.desktop}) {\n    max-height: calc(100vh - 293px);\n  }\n`;\n\nexport const CardListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 335px;\n  min-height: 100%;\n`;\n\nexport const TrackVertical = styled.div`\n  background-color: ${props =>\n    props.theme.colors.columnTrackVerticalBackground};\n  right: 0;\n  bottom: 0;\n  top: 2px;\n  border-radius: 12px;\n  width: 8px !important;\n`;\n\nexport const ThumbVertical = styled.div`\n  border-radius: 12px;\n  background-color: ${props =>\n    props.theme.colors.columnThumbVerticalBackground};\n`;\n","import styled from '@emotion/styled';\nimport { priority } from 'styles';\nimport { baseTransition } from 'styles';\n\nexport const CardStyled = styled.li`\n  position: relative;\n  height: 154px;\n  width: 100%;\n  padding: 14px 24px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.card};\n  overflow: hidden;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 4px;\n    height: 100%;\n    background-color: ${props => priority[props.color]};\n  }\n`;\n\nexport const CardTitleStyled = styled.h3`\n  margin-bottom: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  font-weight: 600;\n  color: ${props => props.theme.colors.cardMajorText};\n`;\n\nexport const CardDescriptionStyled = styled.p`\n  width: 290px;\n  height: 2rem;\n  margin-bottom: 34px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.3333;\n  color: ${props => props.theme.colors.cardMinorText};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nexport const CardFooter = styled.div`\n  position: relative;\n  display: flex;\n  align-items: flex-end;\n  &::before {\n    content: '';\n    position: absolute;\n    top: -14px;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${props => props.theme.colors.cardDecor};\n    z-index: 1;\n  }\n`;\n\nexport const CardParamsWrapper = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const CardParamsTitle = styled.p`\n  margin-bottom: 4px;\n  font-size: 8px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMinorText};\n`;\n\nexport const PriorityStatus = styled.p`\n  position: relative;\n  margin-left: 16px;\n  text-transform: capitalize;\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMajorText};\n  &::before {\n    content: '';\n    position: absolute;\n    top: 1.5px;\n    left: -16px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${props => priority[props.color]};\n  }\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMajorText};\n`;\n\nexport const ToolsWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const ToolsButtonBell = styled.button`\n  position: relative;\n  width: 16px;\n  height: 16px;\n  margin-left: auto;\n  margin-right: 12px;\n  color: #888888;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 30px;\n    transform: translate(-50%, -50%);\n    background-image: ${props =>\n      props.pastDeadline\n        ? 'radial-gradient(circle, red 0%, rgba(255, 0, 0, 0) 70%)'\n        : 'radial-gradient(circle, #bedbb070 0%, #bedbb000 70%)'};\n  }\n`;\n\nexport const ToolsButton = styled.button`\n  width: 16px;\n  height: 16px;\n  color: #888888;\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport { devices } from 'styles';\n\nexport const StyledDiv = styled.div`\n  width: 350px;\n  height: 522px;\n  background-color: ${props => props.theme.colors.background};\n  margin-left: -4px;\n  border-radius: 10px;\n\n  @media screen and (${devices.notdesktop}) {\n    width: 335px;\n    height: 522px;\n  }\n`;\n\nexport const StyledContainerCardHeder = styled.div`\n  display: flex;\n`;\n\nexport const StyledBtnClose = styled.button`\n  width: 18px;\n  height: 18px;\n  margin-left: 212px;\n  fill: ${props => props.theme.colors.closeModalBtn};\n\n  @media screen and (${devices.notdesktop}) {\n    margin-left: 192px;\n    margin-top: 14px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    margin-left: 192px;\n    margin-top: 14px;\n  }\n`;\n\nexport const StyledP = styled.p`\n  display: inline-block;\n  color: ${props => props.theme.colors.cardMajorText};\n  font-size: 18px;\n  margin-bottom: 24px;\n  margin-top: 24px;\n  margin-left: 24px;\n`;\n\nexport const StyledInput = styled.input`\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.btnAddBoard};\n  opacity: 0.4;\n  background: ${props => props.theme.colors.card};\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  margin-bottom: 10px;\n  margin-left: 20px;\n  padding: 14px 115px 14px 18px;\n  font-size: 14px;\n  border-radius: 4px;\n  color: ${props => props.theme.colors.cardMajorText};\n  :focus-visible {\n    border: 1px solid ${props => props.theme.colors.btnAddBoard};\n    outline: none;\n  }\n\n  @media screen and (${devices.notdesktop}) {\n    display: inline-flex;\n    padding: 14px 101px 14px 18px;\n    align-items: center;\n    border-radius: 8px;\n    border: 1px solid #bedbb0;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const StyledTextArea = styled.textarea`\n  resize: none;\n\n  max-width: 100%;\n  font-size: 14px;\n  margin-left: 20px;\n  color: ${props => props.theme.colors.cardMajorText};\n  padding: 14px 132px 122px 15px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.btnAddBoard};\n  opacity: 0.4;\n  background: ${props => props.theme.colors.card};\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  margin-bottom: 24px;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n\n  :focus {\n    border-color: ${props => props.theme.colors.btnAddBoard};\n  }\n\n  @media screen and (${devices.mobile}) {\n    padding: 14px 134px 122px 15px;\n  }\n\n  @media screen and (${devices.tablet}) {\n    padding: 14px 124px 122px 15px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    padding: 14px;\n    width: 311px;\n    height: 154px;\n  }\n`;\n\nexport const StyledTitelBtn = styled.label`\n  color: ${props => props.theme.colors.cardMinorText};\n  font-size: 12px;\n  margin-left: 24px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 24px;\n  width: 302px;\n  padding: 10px 0px 11px 0px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${props => props.theme.colors.btnAddBoard};\n\n  @media screen and (${devices.notdesktop}) {\n    width: 287px;\n  }\n`;\n\nexport const Container = styled.div`\n  color: ${props => props.theme.colors.btnAddBoard};\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.btnAddBoard};\n  /* margin-left: 24px; */\n  justify-content: left;\n  align-items: center;\n  display: flex;\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nexport const RadioInput = styled.input`\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    border-radius: 50%;\n    width: ${({ checked }) => (checked ? '10px' : '14px')};\n    height: ${({ checked }) => (checked ? '10px' : '14px')};\n    border: ${({ checked, colors }) => (checked ? '1px' : '0px')} solid\n      ${({ colors }) => colors};\n    background-color: ${({ checked, color }) => (checked ? color : color)};\n    transition: width 0.2s ease, height 0.2s ease;\n  }\n  &:checked::before {\n    margin-bottom: 3.2px;\n    margin-left: 1.5px;\n    background-color: ${({ checked, color }) => (checked ? color : color)};\n  }\n`;\n\nexport const PlusIconContainer = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n  background-color: ${props => props.theme.colors.card};\n  border-radius: 20%;\n  fill: ${props => props.theme.colors.plusButtonColor};\n`;\n\nexport const StyledTitleDeadline = styled.div`\n  color: ${props => props.theme.colors.cardMinorText};\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  margin-left: 24px;\n`;\n\nexport const StyledFormikTitleNotification = styled.div`\n  margin-left: 24px;\n  margin-bottom: 5px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const StyledFormikDescriptionNotification = styled.div`\n  margin-top: -15px;\n  margin-left: 24px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const StyledFormikColorNotification = styled.div`\n  margin-top: -5px;\n  margin-left: 24px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const DatePickerContainer = styled.div`\n  .react-datepicker {\n    border-radius: 8px;\n    border: 1px solid #bedbb0;\n    background: ${props => props.theme.colors.calendarBackGround};\n  }\n\n  .react-datepicker-popper {\n    margin-left: 130px;\n    margin-top: -25px;\n  }\n\n  .react-datepicker__header {\n    background-color: ${props => props.theme.colors.calendarBackGround};\n  }\n\n  .react-datepicker__current-month {\n    color: ${props => props.theme.colors.calendarNumberColor};\n  }\n\n  .react-datepicker__day-name {\n    color: ${props => props.theme.colors.calendarNumberColor};\n  }\n\n  .react-datepicker__day {\n    color: ${props => props.theme.colors.calendarNumberColor};\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n    border-radius: 50%;\n\n    &:active,\n    &:hover {\n      background-color: ${props => props.theme.colors.calendarSelectedColor};\n    }\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: ${props => props.theme.colors.btnAddBoard};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--today.react-datepicker__day--selected {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n  }\n\n  .react-datepicker__day--today:not(.react-datepicker__day--selected):hover {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n    color: black;\n  }\n\n  .react-datepicker__day--selected:hover {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport sprite from '../../img/icons/sprite.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useDispatch } from 'react-redux';\nimport { editTask } from '../../store/columns/operations';\nimport {\n  StyledP,\n  StyledDiv,\n  StyledInput,\n  StyledTextArea,\n  StyledButton,\n  RadioGroup,\n  RadioInput,\n  RadioLabel,\n  StyledTitelBtn,\n  StyledTitleDeadline,\n  Container,\n  StyledFormikTitleNotification,\n  StyledFormikDescriptionNotification,\n  StyledBtnClose,\n  PlusIconContainer,\n  StyledFormikColorNotification,\n  DatePickerContainer,\n} from './AddTaskForm.styled';\n\nexport const colors = ['#8FA1D0', '#E09CB5', '#BEDBB0', '#808080'];\nconst priorities = ['low', 'medium', 'high', 'without'];\n\nexport const EditTask = ({\n  boardId,\n  columnId,\n  closeModal,\n  title,\n  description,\n  priority,\n  index,\n  taskId,\n  deadline: initialDeadline,\n}) => {\n  const initialValues = {\n    title: title,\n    description: description,\n    priority: priority,\n    deadline: initialDeadline,\n  };\n\n  const [deadline, setDeadline] = useState(initialDeadline);\n\n  const dispatch = useDispatch();\n\n  const deadlinePickerRef = useRef(null);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Title is required')\n      .min(1, 'Title must contain at least 3 characters')\n      .max(32, 'Title must not exceed 50 characters'),\n    description: Yup.string()\n      .required('Description is required')\n      .min(1, 'Description must contain at least 10 characters')\n      .max(500, 'Description must not exceed 500 characters'),\n    priority: Yup.string().required('Please select a color'),\n    deadline: Yup.date()\n      .required('Please select a deadline date')\n      .min(new Date(), 'Deadline cannot be earlier than today'),\n  });\n\n  const handleDeadlineClick = () => {\n    if (deadlinePickerRef.current) {\n      deadlinePickerRef.current.setOpen(true);\n    }\n  };\n\n  const CurrentDate = () => {\n    const formattedDate = moment(deadline).format('D MMMM D');\n    return <div> {formattedDate}</div>;\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await dispatch(editTask({ ...values, index, boardId, columnId, taskId }));\n      resetForm();\n      closeModal();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n  });\n\n  const handleDateChange = date => {\n    if (date && date < new Date()) {\n      alert('Deadline cannot be before today.');\n      return;\n    }\n    formik.setFieldValue('deadline', date);\n    setDeadline(date);\n  };\n\n  const formattedDeadline = formik.values.deadline\n    ? moment(formik.values.deadline).format('D MMMM YYYY')\n    : CurrentDate();\n\n  const updateDeadline = deadline ? new Date(deadline) : null;\n\n  return (\n    <StyledDiv>\n      <StyledP>Edit Card</StyledP>\n\n      <StyledBtnClose onClick={closeModal}>\n        <svg\n          className=\"icon\"\n          width=\"18\"\n          height=\"18\"\n          aria-hidden=\"true\"\n          role=\"presentation\"\n        >\n          <use xlinkHref={`${sprite}#icon-x-close`} />\n        </svg>\n      </StyledBtnClose>\n      <form onSubmit={formik.handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.title && formik.errors.title ? (\n          <StyledFormikTitleNotification>\n            {formik.errors.title}\n          </StyledFormikTitleNotification>\n        ) : null}\n        <StyledTextArea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.description && formik.errors.description ? (\n          <StyledFormikDescriptionNotification>\n            {formik.errors.description}\n          </StyledFormikDescriptionNotification>\n        ) : null}\n        <StyledTitelBtn>Label color</StyledTitelBtn>\n        <br />\n        <RadioGroup>\n          {priorities.map((priority, index) => (\n            <RadioLabel key={index}>\n              <RadioInput\n                type=\"radio\"\n                name=\"priority\"\n                color={colors[index]}\n                value={priority}\n                checked={formik.values.priority === priority}\n                onChange={formik.handleChange}\n              />\n            </RadioLabel>\n          ))}\n        </RadioGroup>\n        {formik.touched.priority && formik.errors.priority ? (\n          <StyledFormikColorNotification>\n            {formik.errors.priority}\n          </StyledFormikColorNotification>\n        ) : null}\n\n        <StyledTitleDeadline>\n          Deadline\n          <Container>\n            {formattedDeadline}\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n              fill=\"#BEDBB0\"\n              onClick={handleDeadlineClick}\n              style={{\n                marginLeft: '5px',\n                cursor: 'pointer',\n              }}\n            >\n              <use xlinkHref={`${sprite}#icon-chevron-down`} />\n            </svg>\n          </Container>\n          {formik.touched.deadline && formik.errors.deadline ? (\n            <div>{formik.errors.deadline}</div>\n          ) : null}\n          <DatePickerContainer>\n            <DatePicker\n              className=\"custom-datepicker\"\n              ref={deadlinePickerRef}\n              name=\"deadline\"\n              selected={updateDeadline}\n              onChange={handleDateChange}\n              locale=\"en\"\n              dateFormat=\"d MMMM yyyy\"\n              showTimeSelect={false}\n              customInput={<div></div>}\n            />\n          </DatePickerContainer>\n        </StyledTitleDeadline>\n        <StyledButton type=\"submit\">\n          <PlusIconContainer>\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n            >\n              <use xlinkHref={`${sprite}#icon-plus`} />\n            </svg>\n          </PlusIconContainer>\n          Edit\n        </StyledButton>\n      </form>\n    </StyledDiv>\n  );\n};\n","import {\n  CardDescriptionStyled,\n  CardFooter,\n  CardParamsTitle,\n  CardParamsWrapper,\n  CardStyled,\n  CardTitleStyled,\n  DeadlineDate,\n  PriorityStatus,\n  ToolsButton,\n  ToolsButtonBell,\n  ToolsWrapper,\n} from './Card.styled';\nimport sprite from '../../img/icons/sprite.svg';\nimport { Svg } from 'components/SvgIcon/SvgIcon';\nimport { forwardRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'components/Modal';\nimport { EditTask } from 'components/AddTaskForm/EditTaskForm';\nimport { deleteTask } from '../../store/columns/operations';\nimport moment from 'moment';\n\nexport const Card = forwardRef(\n  (\n    {\n      _id,\n      title,\n      description,\n      priority,\n      deadline,\n      index,\n      boardId,\n      columnId,\n      taskData,\n      ...rest\n    },\n    ref\n  ) => {\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const dispatch = useDispatch();\n\n    const openEditModal = () => {\n      setIsEditModalOpen(true);\n    };\n\n    const closeEditModal = () => {\n      setIsEditModalOpen(false);\n    };\n\n    const handleDeleteTaskButtonClick = async () => {\n      await dispatch(deleteTask({ boardId, columnId, taskId: _id }));\n    };\n\n    const formattedDeadline = moment(deadline).format('DD/MM/YYYY');\n\n    return (\n      <CardStyled color={priority} ref={ref} {...rest}>\n        <CardTitleStyled>{title}</CardTitleStyled>\n        <CardDescriptionStyled>{description}</CardDescriptionStyled>\n        <CardFooter>\n          <CardParamsWrapper>\n            <div>\n              <CardParamsTitle>Priority</CardParamsTitle>\n              <PriorityStatus color={priority}>{priority}</PriorityStatus>\n            </div>\n            <div>\n              <CardParamsTitle>Deadline</CardParamsTitle>\n              <DeadlineDate>{formattedDeadline}</DeadlineDate>\n            </div>\n          </CardParamsWrapper>\n          <ToolsButtonBell\n            type=\"button\"\n            pastDeadline={moment(deadline).isBefore(moment())}\n          >\n            <Svg w={16} h={16} use={`${sprite}#icon-bell`} />\n          </ToolsButtonBell>\n          <ToolsWrapper>\n            <ToolsButton type=\"button\" onClick={openEditModal}>\n              <Svg w={16} h={16} use={`${sprite}#icon-pencil`} />\n            </ToolsButton>\n            {isEditModalOpen && (\n              <Modal onClose={closeEditModal}>\n                <EditTask\n                  boardId={boardId}\n                  columnId={columnId}\n                  taskId={_id}\n                  taskData={taskData}\n                  title={title}\n                  description={description}\n                  deadline={deadline}\n                  index={index}\n                  priority={priority}\n                  closeModal={closeEditModal}\n                />\n              </Modal>\n            )}\n            <ToolsButton type=\"button\" onClick={handleDeleteTaskButtonClick}>\n              <Svg w={16} h={16} use={`${sprite}#icon-trash`} />\n            </ToolsButton>\n          </ToolsWrapper>\n        </CardFooter>\n      </CardStyled>\n    );\n  }\n);\n","export const selectStatusFilter = state => state.filters.status;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport {\n  CardListContainer,\n  CardListStyled,\n  TrackVertical,\n  ThumbVertical,\n} from './CardList.styled';\nimport { Card } from './Card';\nimport { selectStatusFilter } from 'store/filter/selectors';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\n\nexport const CardList = ({ boardId, cards, columnId }) => {\n  const status = useSelector(selectStatusFilter);\n  const filteredCards = status.priority\n    ? cards.filter(card => card.priority === status.priority)\n    : cards;\n\n  return (\n    <Droppable droppableId={columnId} type=\"CARD\">\n      {provided => (\n        <CardListContainer {...provided.droppableProps}>\n          <Scrollbars\n            hideTracksWhenNotNeeded={true}\n            renderTrackVertical={({ style, ...props }) => (\n              <TrackVertical\n                {...props}\n                style={{\n                  ...style,\n                }}\n              />\n            )}\n            renderThumbVertical={({ style, ...props }) => (\n              <ThumbVertical\n                {...props}\n                style={{\n                  ...style,\n                }}\n              />\n            )}\n          >\n            <CardListStyled ref={provided.innerRef}>\n              {filteredCards.map(\n                (\n                  { _id, title, description, priority, deadline, owner },\n                  index\n                ) => {\n                  return (\n                    <Draggable key={_id} draggableId={_id} index={index}>\n                      {dragProvided => (\n                        <Card\n                          key={_id}\n                          _id={_id}\n                          ref={dragProvided.innerRef}\n                          title={title}\n                          description={description}\n                          priority={priority}\n                          deadline={deadline}\n                          index={index}\n                          boardId={boardId}\n                          columnId={owner}\n                          {...dragProvided.draggableProps}\n                          {...dragProvided.dragHandleProps}\n                        />\n                      )}\n                    </Draggable>\n                  );\n                }\n              )}\n            </CardListStyled>\n          </Scrollbars>\n          {provided.placeholder}\n        </CardListContainer>\n      )}\n    </Droppable>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport sprite from '../../img/icons/sprite.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../../store/columns/operations';\nimport {\n  StyledP,\n  StyledDiv,\n  StyledInput,\n  StyledTextArea,\n  StyledButton,\n  RadioGroup,\n  RadioInput,\n  RadioLabel,\n  StyledTitelBtn,\n  StyledTitleDeadline,\n  Container,\n  StyledFormikTitleNotification,\n  StyledFormikDescriptionNotification,\n  StyledBtnClose,\n  PlusIconContainer,\n  StyledFormikColorNotification,\n  DatePickerContainer,\n  StyledContainerCardHeder,\n} from './AddTaskForm.styled';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'store/columns/selectors';\n\nexport const colors = ['#8FA1D0', '#E09CB5', '#BEDBB0', '#808080'];\nconst priorities = ['low', 'medium', 'high', 'without'];\n\nconst initialValues = {\n  title: '',\n  description: '',\n  priority: '',\n  deadline: moment().toDate(),\n};\n\nexport const AddTasks = ({ boardId, columnId, closeModal, taskId }) => {\n  const [deadline, setDeadline] = useState(new Date());\n\n  const dispatch = useDispatch();\n  const deadlinePickerRef = useRef(null);\n\n  const columns = useSelector(selectColumns);\n  const currentColumn = columns.filter(val => val._id === columnId);\n  const index = currentColumn[0].cards.length;\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .required('Title is required')\n      .min(1, 'Title must contain at least 3 characters')\n      .max(32, 'Title must not exceed 50 characters'),\n    description: Yup.string()\n      .required('Description is required')\n      .min(1, 'Description must contain at least 10 characters')\n      .max(500, 'Description must not exceed 500 characters'),\n    priority: Yup.string().required('Please select a color'),\n    deadline: Yup.date()\n      .required('Please select a deadline date')\n      .min(Date(), 'Deadline cannot be earlier than today'),\n  });\n\n  const handleDeadlineClick = () => {\n    if (deadlinePickerRef.current) {\n      deadlinePickerRef.current.setOpen(true);\n    }\n  };\n\n  const CurrentDate = () => {\n    const formattedDate = moment().format('MMMM D');\n    return <div>Today, {formattedDate}</div>;\n  };\n\n  const formattedDeadline = deadline\n    ? moment(deadline).format('D MMMM YYYY')\n    : CurrentDate();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      setDeadline(values.deadline);\n      await dispatch(addTask({ ...values, index, boardId, columnId, taskId }));\n      resetForm();\n      setDeadline('');\n      closeModal();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleDateChange = date => {\n    formik.setFieldValue('deadline', date);\n    setDeadline(date);\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n  });\n\n  return (\n    <StyledDiv>\n      <StyledContainerCardHeder>\n        <StyledP>Add Card</StyledP>\n\n        <StyledBtnClose onClick={closeModal}>\n          <svg\n            className=\"icon\"\n            width=\"18\"\n            height=\"18\"\n            aria-hidden=\"true\"\n            role=\"presentation\"\n          >\n            <use xlinkHref={`${sprite}#icon-x-close`} />\n          </svg>\n        </StyledBtnClose>\n      </StyledContainerCardHeder>\n\n      <form onSubmit={formik.handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.title && formik.errors.title ? (\n          <StyledFormikTitleNotification>\n            {formik.errors.title}\n          </StyledFormikTitleNotification>\n        ) : null}\n        <StyledTextArea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.description && formik.errors.description ? (\n          <StyledFormikDescriptionNotification>\n            {formik.errors.description}\n          </StyledFormikDescriptionNotification>\n        ) : null}\n        <StyledTitelBtn>Label color</StyledTitelBtn>\n        <br />\n        <RadioGroup>\n          {priorities.map((priority, index) => (\n            <RadioLabel key={index}>\n              <RadioInput\n                type=\"radio\"\n                name=\"priority\"\n                color={colors[index]}\n                value={priority}\n                checked={formik.values.priority === priority}\n                onChange={formik.handleChange}\n              />\n            </RadioLabel>\n          ))}\n        </RadioGroup>\n        {formik.touched.priority && formik.errors.priority ? (\n          <StyledFormikColorNotification>\n            {formik.errors.priority}\n          </StyledFormikColorNotification>\n        ) : null}\n\n        <StyledTitleDeadline>\n          Deadline\n          <Container>\n            {formattedDeadline}\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n              fill=\"#BEDBB0\"\n              onClick={handleDeadlineClick}\n              style={{\n                marginLeft: '5px',\n                cursor: 'pointer',\n              }}\n            >\n              <use xlinkHref={`${sprite}#icon-chevron-down`} />\n            </svg>\n          </Container>\n          {formik.touched.deadline && formik.errors.deadline ? (\n            <div>{formik.errors.deadline}</div>\n          ) : null}\n          <DatePickerContainer>\n            <DatePicker\n              className=\"custom-datepicker\"\n              ref={deadlinePickerRef}\n              name=\"deadline\"\n              selected={deadline}\n              onChange={handleDateChange}\n              locale=\"en\"\n              dateFormat=\"d MMMM yyyy\"\n              showTimeSelect={false}\n              customInput={<div></div>}\n            />\n          </DatePickerContainer>\n        </StyledTitleDeadline>\n        <StyledButton type=\"submit\">\n          <PlusIconContainer>\n            <svg\n              className=\"icon\"\n              width=\"14\"\n              height=\"14\"\n              aria-hidden=\"true\"\n              role=\"presentation\"\n            >\n              <use xlinkHref={`${sprite}#icon-plus`} />\n            </svg>\n          </PlusIconContainer>\n          Add\n        </StyledButton>\n      </form>\n    </StyledDiv>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { deleteColumn } from '../../store/columns/operations';\nimport sprite from '../../img/icons/sprite.svg';\nimport { useAskDeleteModal, useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport { ColumnForm } from './ColumnForm';\n\nimport {\n  ColumnContainer,\n  ColumnTitleContainer,\n  ColumnTitle,\n  IconContainer,\n  TitleIcon,\n  IconButton,\n  AddCardButton,\n  AddCardIconContainer,\n  AddCardIcon,\n} from './Column.styled';\nimport { CardList } from 'components/Card/CardList';\nimport { AddTasks } from 'components/AddTaskForm/AddTaskForm';\nimport { useDeleteColumn } from 'hooks/useDeleteBoard';\nimport { AskDeleteModal } from 'components/AskDeleteModal/AskDeleteModal';\n\nexport const Column = ({ _id, title, createdAt, cards, owner, index }) => {\n  const [isEditCardMode, setIsEditCardMode] = useState(false);\n\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const { isAskDeleteModalOpen, openAskDeleteModal, closeAskDeleteModal } =\n    useAskDeleteModal();\n  const { isDeleteColumn } = useDeleteColumn(_id);\n\n  const dispatch = useDispatch();\n  const hasCards = cards && cards.length > 0;\n\n  const handleDeleteColumnEmty = async () => {\n    if (!hasCards) {\n      await dispatch(deleteColumn({ boardId: owner, columnId: _id }));\n      if (isDeleteColumn) {\n        Notify.info(\n          `Sorry, the request to delete column ${title} failed, please try again.`\n        );\n        return;\n      }\n      Notify.info(`The column ${title} was successfully deleted`);\n      return;\n    }\n    openAskDeleteModal();\n  };\n\n  const handleDeleteColumnFull = async () => {\n    await dispatch(deleteColumn({ boardId: owner, columnId: _id }));\n    if (isDeleteColumn) {\n      Notify.info(\n        `Sorry, the request to delete column ${title} failed, please try again.`\n      );\n      return;\n    }\n    Notify.info(`The column ${title} was successfully deleted`);\n  };\n\n  const handleAddCardButtonClick = () => {\n    setIsEditCardMode(false);\n    openModal();\n  };\n\n  const handleEditCardButtonClick = () => {\n    setIsEditCardMode(true);\n    openModal();\n  };\n\n  return (\n    <Draggable draggableId={_id} index={index}>\n      {provided => (\n        <ColumnContainer ref={provided.innerRef} {...provided.draggableProps}>\n          <ColumnTitleContainer {...provided.dragHandleProps}>\n            <ColumnTitle>{title}</ColumnTitle>\n            <IconContainer>\n              <IconButton\n                type=\"button\"\n                onClick={() => handleEditCardButtonClick(openModal)}\n              >\n                <TitleIcon>\n                  <use href={`${sprite}#icon-pencil`}></use>\n                </TitleIcon>\n              </IconButton>\n              <IconButton type=\"button\" onClick={handleDeleteColumnEmty}>\n                <TitleIcon>\n                  <use href={`${sprite}#icon-trash`}></use>\n                </TitleIcon>\n              </IconButton>\n            </IconContainer>\n          </ColumnTitleContainer>\n          {cards && <CardList boardId={owner} columnId={_id} cards={cards} />}\n          <AddCardButton onClick={handleAddCardButtonClick}>\n            <AddCardIconContainer>\n              <AddCardIcon>\n                <use href={`${sprite}#icon-plus`}></use>\n              </AddCardIcon>\n            </AddCardIconContainer>\n            <div>Add another card</div>\n          </AddCardButton>\n          {isModalOpen && isEditCardMode && (\n            <Modal onClose={closeModal}>\n              <ColumnForm\n                id={_id}\n                boardId={owner}\n                onCloseForm={closeModal}\n                columnTitle={title}\n                isEditMode={true}\n              />\n            </Modal>\n          )}\n          {isModalOpen && !isEditCardMode && (\n            <Modal onClose={closeModal}>\n              <AddTasks\n                boardId={owner}\n                columnId={_id}\n                closeModal={closeModal}\n                index={index}\n              />\n            </Modal>\n          )}\n          {isAskDeleteModalOpen && (\n            <Modal onClose={closeAskDeleteModal}>\n              <AskDeleteModal\n                onClick={closeAskDeleteModal}\n                handleDelete={handleDeleteColumnFull}\n                title={'Delete column?'}\n              />\n            </Modal>\n          )}\n        </ColumnContainer>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ColumnListStyled = styled.ul`\n  display: flex;\n  gap: 34px;\n  margin-right: 34px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Column } from '../MainDashboard/Column';\nimport { ColumnListStyled } from './ColunmList.styled';\nimport {\n  selectColumns,\n  selectIsLoading,\n  selectError,\n} from 'store/columns/selectors';\n\nimport { editColumn, editTask, getColumns } from 'store/columns/operations';\nimport { Loader } from '../Loader/Loader';\nimport { columnsActions } from '../../store/columns/slice';\nimport { reorder } from 'utils/dragAndDrop';\n\nexport const ColumnList = ({ boardId }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  if (error) {\n    Notify.warning(error);\n  }\n\n  useEffect(() => {\n    if (!boardId) {\n      return;\n    }\n    dispatch(getColumns(boardId));\n  }, [boardId, dispatch]);\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n\n    if (\n      !destination ||\n      (source.droppableId === destination.droppableId &&\n        source.index === destination.index)\n    ) {\n      return;\n    }\n\n    if (result.type === 'COLUMN') {\n      dispatch(\n        columnsActions.moveColumns({\n          sourceIndex: source.index,\n          destinationIndex: destination.index,\n        })\n      );\n      const arr = reorder(columns, source.index, destination.index);\n      arr.forEach((e, i) => {\n        dispatch(editColumn({ boardId, id: e._id, title: e.title, index: i }));\n      });\n      return;\n    }\n\n    const sourceCol = columns.filter(\n      val => val._id === result.source.droppableId\n    );\n    const destCol = columns.filter(\n      val => val._id === result.destination.droppableId\n    );\n    let sourceArr = [...sourceCol[0].cards];\n    let destArr = [...destCol[0].cards];\n    const draggableCard = sourceArr.find(val => val._id === result.draggableId);\n    sourceArr.splice(result.source.index, 1);\n    destArr.splice(result.destination.index, 0, draggableCard);\n\n    sourceArr.forEach((e, i) => {\n      dispatch(\n        editTask({\n          title: e.title,\n          description: e.description,\n          priority: e.priority,\n          deadline: e.deadline,\n          index: i,\n          boardId,\n          columnId: e.owner,\n          taskId: e._id,\n        })\n      );\n    });\n    destArr.forEach((e, i) => {\n      dispatch(\n        editTask({\n          title: e.title,\n          description: e.description,\n          priority: e.priority,\n          deadline: e.deadline,\n          index: i,\n          boardId,\n          columnId: result.destination.droppableId,\n          taskId: e._id,\n        })\n      );\n    });\n    dispatch(columnsActions.moveCards({ source, destination }));\n  };\n\n  if (isLoading) {\n    return <Loader fill={'#fff'} />;\n  }\n  if (columns.length > 0) {\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId={boardId} type=\"COLUMN\" direction=\"horizontal\">\n          {provided => (\n            <ColumnListStyled\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {columns.map(({ _id, title, createdAt, owner, cards }, index) => (\n                <Column\n                  key={_id}\n                  index={index}\n                  owner={owner}\n                  _id={_id}\n                  title={title}\n                  createdAt={createdAt}\n                  cards={cards}\n                />\n              ))}\n              {provided.placeholder}\n            </ColumnListStyled>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n};\n","import styled from '@emotion/styled';\nimport { baseTransition, devices } from 'styles';\n\nexport const CreateBoardContainer = styled.div`\n  margin: auto;\n  text-align: center;\n  color: ${props => props.theme.colors.createBoardContainerColor};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2;\n  letter-spacing: -0.28px;\n\n  @media screen and (${devices.tablet}) {\n    max-width: 486px;\n  }\n`;\n\nexport const CreateBoardButton = styled.button`\n  color: ${props => props.theme.colors.formAddButtonBackground};\n  font-family: Poppins;\n  transition: color ${baseTransition};\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.formAddButtonHover};\n  }\n`;\n","import React from 'react';\nimport { Modal } from '../Modal/Modal';\nimport { useModal } from 'hooks/useModal';\nimport NewBoard from 'components/NewBoard/NewBoard';\n\nimport { CreateBoardContainer, CreateBoardButton } from './CreateBoard.styled';\n\nconst CreateBoard = () => {\n  const { isModalOpen, openModal, closeModal } = useModal();\n  return (\n    <>\n      <CreateBoardContainer>\n        Before starting your project, it is essential{' '}\n        <CreateBoardButton type=\"button\" onClick={openModal}>\n          to create a board\n        </CreateBoardButton>{' '}\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </CreateBoardContainer>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <NewBoard onClick={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default CreateBoard;\n","import styled from '@emotion/styled';\nimport { baseTransition, devices } from 'styles';\n\nexport const MainDashboardSection = styled.section`\n  position: relative;\n  background-color: ${props => props.theme.colors.background};\n  background-image: ${props =>\n    props.background !== 'default'\n      ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Mobile/${props.background}.jpg\")`\n      : 'none'};\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  @media screen and (${devices.retina}),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Mobile/${props.background}%402x.jpg\")`\n        : 'none'};\n  }\n\n  @media screen and (${devices.tablet}) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Tablet/${props.background}.jpg\")`\n        : 'none'};\n    @media screen and (${devices.retina}),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== 'default'\n          ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Tablet/${props.background}%402x.jpg\")`\n          : 'none'};\n    }\n  }\n\n  @media screen and (${devices.desktop}) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Desktop/${props.background}.jpg\")`\n        : 'none'};\n    @media screen and (${devices.retina}),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== 'default'\n          ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Desktop/${props.background}.jpg\")`\n          : 'none'};\n    }\n  }\n`;\n\nexport const MainDashboardContainer = styled.div`\n  min-height: calc(100svh - 60px);\n  height: 100%;\n  padding: 74px 0 24px 0;\n  overflow-x: auto;\n  display: flex;\n\n  @media screen and (${devices.tablet}) {\n    min-height: calc(100svh - 68px);\n    gap: 34px;\n    padding: 80px 0 32px 0;\n  }\n\n  @media screen and (${devices.desktop}) {\n    min-height: calc(100vh - 68px);\n    padding: 48px 0 8px 0;\n  }\n`;\n\nexport const MainDashboardSectionTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const MainDashboardAddColumnButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 335px;\n  height: 56px;\n  padding: 14px 78px;\n  margin-right: 20px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border-radius: 8px;\n  color: ${props => props.theme.colors.addColumnButtonColor};\n  background-color: ${props => props.theme.colors.addColumnButtonBackground};\n  transition: background ${baseTransition};\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.addColumnButtonHoverBackground};\n\n    @media screen and (${devices.tablet}) {\n      margin-right: 32px;\n    }\n\n    @media screen and (${devices.desktop}) {\n      margin-right: 24px;\n    }\n  }\n`;\n\nexport const MainDashboardIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.colors.iconContainerBackground};\n  border-radius: 6px;\n`;\n\nexport const MainDashboardIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: ${props => props.theme.colors.addColumnIconFill};\n`;\n\nexport const FilterContainer = styled.div`\n  position: absolute;\n  width: 100%;\n`;\n\nexport const ContentHolder = styled.div`\n  width: 100%;\n`;\n\nexport const ContentWrapper = styled.div`\n  width: max-content;\n  height: 100%;\n  display: flex;\n  margin-left: 20px;\n\n  @media screen and (${devices.tablet}) {\n    margin-left: 32px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    margin-left: 24px;\n  }\n`;\n\nexport const TrackHorizontal = styled.div`\n  min-height: 12px;\n  border-radius: 12px;\n  bottom: 0;\n  left: 20px;\n  right: 20px;\n  @media screen and (${devices.tablet}) {\n    left: 32px;\n    right: 32px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    left: 24px;\n    right: 24px;\n  }\n  background-color: ${props =>\n    props.theme.colors.mainTrackHorizontalBackground};\n`;\n\nexport const ThumbHorizontal = styled.div`\n  height: 12px;\n  border-radius: 12px;\n  background-color: ${props =>\n    props.theme.colors.mainThumbHorizontalBackground};\n`;\n","import styled from '@emotion/styled';\n\nimport { baseTransition } from 'styles';\n\nexport const FilterButton = styled.button`\n  position: relative;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  padding-left: 22px;\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.filterBtnColorSelected\n      : props.theme.colors.filterBtnColor};\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.text === 'Without priority'\n        ? props.theme.colors.filterWithoutPriorityColor\n        : props.color};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 1px;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: ${props => props.theme.colors.filterDecorativeElement};\n    opacity: ${props => (props.selected ? '1' : ' 0')};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { FilterButton } from './StatusFilterButton.styled';\n\nconst StatusFilterButton = ({ selected, color, children, onClick }) => {\n  return (\n    <FilterButton\n      selected={selected}\n      type=\"button\"\n      onClick={onClick}\n      color={color}\n      text={children}\n    >\n      {children}\n    </FilterButton>\n  );\n};\n\nStatusFilterButton.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  color: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StatusFilterButton;\n","import styled from '@emotion/styled';\n\nimport { baseTransition, devices } from 'styles';\n\nexport const StatusFilterContainer = styled.div`\n  position: relative;\n  width: 300px;\n  height: 234px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.filterContainerBackground};\n  padding: 24px;\n  box-shadow: ${props => props.theme.colors.filterContainerShadow};\n\n  @media screen and (${devices.onlymobile}) {\n    max-width: 100%;\n  }\n`;\n\nexport const StatusFilterMainText = styled.p`\n  color: ${props => props.theme.colors.titleColor};\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  width: 100%;\n  padding-bottom: 14px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 14px;\n`;\n\nexport const StatusFilterBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const StatusFilterLabel = styled.p`\n  color: ${props => props.theme.colors.titleColor};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const StatusFilterShowAll = styled.button`\n  cursor: pointer;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.filterBtnColorSelected\n      : props.theme.colors.filterBtnColor};\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n`;\n\nexport const StatusFilterItem = styled.li`\n  &:not(:last-of-type) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  top: 14px;\n  right: 14px;\n  cursor: pointer;\n  fill: ${props => props.theme.colors.closeModalBtn};\n  transition: fill ${baseTransition};\n\n  &:hover,\n  &:focus {\n    fill: ${props => props.theme.colors.closeModalBtnHover};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectStatusFilter } from 'store/filter/selectors';\nimport { statusFilters } from 'store/filter/constants';\nimport { setStatusFilter } from 'store/filter/filterSlice';\nimport StatusFilterButton from 'components/StatusFilterButton';\nimport sprite from '../../img/icons/sprite.svg';\n\nimport {\n  StatusFilterContainer,\n  StatusFilterMainText,\n  StatusFilterLabel,\n  StatusFilterBox,\n  StatusFilterShowAll,\n  CloseButton,\n  StatusFilterItem,\n} from './StatusFilter.styled';\n\nconst options = [\n  {\n    text: 'Without priority',\n    color: 'rgba(255, 255, 255, 0.3)',\n  },\n  {\n    text: 'Low',\n    color: 'rgba(143, 161, 208, 1)',\n  },\n  {\n    text: 'Medium',\n    color: 'rgba(224, 156, 181, 1)',\n  },\n  {\n    text: 'High',\n    color: 'rgba(190, 219, 176, 1)',\n  },\n];\n\nconst StatusFilter = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  const onChangeFilterClick = text => {\n    switch (text) {\n      case 'Without priority':\n        return handleFilterChange(statusFilters.none);\n      case 'Show all':\n        return handleFilterChange(statusFilters.all);\n      case 'Low':\n        return handleFilterChange(statusFilters.low);\n      case 'Medium':\n        return handleFilterChange(statusFilters.medium);\n      case 'High':\n        return handleFilterChange(statusFilters.high);\n      default:\n        return;\n    }\n  };\n\n  const path = '#icon-x-close';\n  const filter = useSelector(selectStatusFilter);\n\n  return (\n    <StatusFilterContainer>\n      <CloseButton onClick={() => onClose()}>\n        <svg width={18} height={18}>\n          <use href={`${sprite}${path}`}></use>\n        </svg>\n      </CloseButton>\n      <StatusFilterMainText>Filter</StatusFilterMainText>\n      <StatusFilterBox>\n        <StatusFilterLabel>Label color</StatusFilterLabel>\n\n        <StatusFilterShowAll\n          type=\"button\"\n          selected={!filter.priority}\n          onClick={() => onChangeFilterClick('Show all')}\n        >\n          Show all\n        </StatusFilterShowAll>\n      </StatusFilterBox>\n      <ul>\n        {options.map(({ text, color }, index) => (\n          <StatusFilterItem key={index}>\n            <StatusFilterButton\n              selected={filter.statusText === text}\n              onClick={() => onChangeFilterClick(text)}\n              color={color}\n            >\n              {text}\n            </StatusFilterButton>\n          </StatusFilterItem>\n        ))}\n      </ul>\n    </StatusFilterContainer>\n  );\n};\n\nStatusFilter.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default StatusFilter;\n","import styled from '@emotion/styled';\n\nimport { devices, baseTransition } from 'styles';\n\nexport const DashboardHeaderTitle = styled.h2`\n  position: absolute;\n  top: 10px;\n  left: 12px;\n  color: ${props => props.theme.colors.titleColor};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: ${props =>\n    props.dashboard.background === 'default'\n      ? 'none'\n      : props.theme.colors.filterBgd};\n  padding: 4px 8px;\n  border-radius: 10px;\n\n  @media screen and (${devices.tablet}) {\n    font-size: 18px;\n    letter-spacing: -0.36px;\n    top: 24px;\n    left: 24px;\n\n    padding: 2px 8px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    top: 8px;\n  }\n`;\n\nexport const DashboardHeaderFilter = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: ${props => props.theme.colors.filterColor};\n  transition: color ${baseTransition}, box-shadow ${baseTransition};\n\n  background-color: ${props => {\n    if (!props.dashboard) return 'none';\n\n    return props.dashboard && props.dashboard.background === 'default'\n      ? 'none'\n      : props.theme.colors.filterBgd;\n  }};\n  padding: 4px 8px;\n  border-radius: 10px;\n\n  @media screen and (${devices.tablet}) {\n    top: 16px;\n    right: 24px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    top: 10px;\n    right: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => {\n      if (props.disabled) return;\n      return props.theme.colors.iconHover;\n    }};\n    box-shadow: ${props => {\n      if (props.dashboard === null) return 'none';\n\n      return props.dashboard && props.dashboard.background === 'default'\n        ? 'none'\n        : props.theme.colors.filterShadow;\n    }};\n  }\n`;\n\nexport const DashboardHeaderText = styled.p`\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n","import { useModal } from 'hooks/useModal';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from 'components/Modal/Modal';\nimport StatusFilter from 'components/StatusFilter';\nimport sprite from '../../img/icons/sprite.svg';\nimport { Svg } from 'components/SvgIcon/SvgIcon';\n\nimport {\n  DashboardHeaderFilter,\n  DashboardHeaderText,\n  DashboardHeaderTitle,\n} from './DashboardHeader.styled';\n\nconst DashboardHeader = ({ name, disabled, dashboard }) => {\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const iconName = '#icon-filter';\n  return (\n    <>\n      {name && (\n        <DashboardHeaderTitle dashboard={dashboard}>\n          {name}\n        </DashboardHeaderTitle>\n      )}\n\n      <DashboardHeaderFilter\n        dashboard={dashboard}\n        type=\"button\"\n        onClick={openModal}\n        disabled={disabled}\n      >\n        <Svg w={16} h={16} use={`${sprite}${iconName}`} />\n        <DashboardHeaderText>Filters</DashboardHeaderText>\n      </DashboardHeaderFilter>\n\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <StatusFilter onClose={closeModal}></StatusFilter>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nDashboardHeader.propTypes = {\n  name: PropTypes.string,\n  disabled: PropTypes.bool.isRequired,\n  dashboard: PropTypes.shape({\n    background: PropTypes.string.isRequired,\n  }),\n};\n\nexport default DashboardHeader;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport { ColumnForm } from '../../components/MainDashboard/ColumnForm';\nimport { ColumnList } from '../../components/MainDashboard/ColunmList';\nimport CreateBoard from '../../components/MainDashboard/CreateBoard';\nimport sprite from '../../img/icons/sprite.svg';\nimport {\n  MainDashboardContainer,\n  MainDashboardSection,\n  MainDashboardSectionTitle,\n  MainDashboardAddColumnButton,\n  MainDashboardIconContainer,\n  MainDashboardIcon,\n  FilterContainer,\n  ContentHolder,\n  ContentWrapper,\n  TrackHorizontal,\n  ThumbHorizontal,\n} from './MainDashboard.styled';\nimport DashboardHeader from 'components/DashboardHeader/DashboardHeader';\nimport { selectBoardsState } from 'store/boards/selectors';\nimport { selectColumns } from 'store/columns/selectors';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nconst MainDashboard = () => {\n  const { boardName } = useParams();\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const { boards } = useSelector(selectBoardsState);\n  const selectedBoard = boardName\n    ? boards.find(board => board.title === boardName.trim())\n    : null;\n\n  const columns = useSelector(selectColumns);\n  const hasCards = columns.some(column => column.cards.length > 0);\n\n  return (\n    <MainDashboardSection background={selectedBoard?.background || 'default'}>\n      <FilterContainer>\n        <DashboardHeader\n          name={selectedBoard?.title}\n          disabled={!hasCards}\n          dashboard={selectedBoard}\n        />\n      </FilterContainer>\n      <MainDashboardContainer>\n        {boardName ? (\n          <>\n            <MainDashboardSectionTitle>\n              Columns with tasks\n            </MainDashboardSectionTitle>\n            <ContentHolder>\n              <Scrollbars\n                hideTracksWhenNotNeeded={true}\n                renderTrackHorizontal={({ style, ...props }) => (\n                  <TrackHorizontal\n                    {...props}\n                    style={{\n                      ...style,\n                    }}\n                  />\n                )}\n                renderThumbHorizontal={({ style, ...props }) => (\n                  <ThumbHorizontal\n                    {...props}\n                    style={{\n                      ...style,\n                    }}\n                  />\n                )}\n              >\n                <ContentWrapper>\n                  <ColumnList boardId={selectedBoard?._id} />\n                  <MainDashboardAddColumnButton\n                    type=\"button\"\n                    onClick={openModal}\n                  >\n                    <MainDashboardIconContainer>\n                      <MainDashboardIcon>\n                        <use href={`${sprite}#icon-plus`}></use>\n                      </MainDashboardIcon>\n                    </MainDashboardIconContainer>\n                    <div>Add another column</div>\n                  </MainDashboardAddColumnButton>\n                </ContentWrapper>\n              </Scrollbars>\n            </ContentHolder>\n            {isModalOpen && (\n              <Modal onClose={closeModal}>\n                <ColumnForm\n                  onCloseForm={closeModal}\n                  boardId={selectedBoard?._id}\n                />\n              </Modal>\n            )}\n          </>\n        ) : (\n          <CreateBoard />\n        )}\n      </MainDashboardContainer>\n    </MainDashboardSection>\n  );\n};\n\nexport default MainDashboard;\n"],"names":["FormTitle","styled","props","theme","colors","formTitleColor","FormContainer","formBackgroundColor","formBorderColor","devices","FormInput","Field","formInputColor","formInputBackground","formInputBorderColor","baseTransition","CloseButton","AddButton","formAddButtonColor","formAddButtonBackground","formAddButtonHover","FormIconContainer","formIconContainerBackground","FormIcon","formIconAddButtonFill","FormCloseIcon","ValidationError","TitleContainer","ColumnFormSchema","Yup","shape","title","min","max","required","ColumnForm","id","boardId","isEditMode","onCloseForm","columnTitle","dispatch","useDispatch","index","useSelector","selectColumns","length","buttonText","type","onClick","href","sprite","initialValues","validationSchema","onSubmit","values","actions","resetForm","editColumn","addColumn","handleSubmit","errors","touched","name","placeholder","ColumnContainer","ColumnTitleContainer","card","ColumnTitle","titleColor","IconContainer","TitleIcon","iconFill","iconHover","IconButton","AddCardButton","addButtonColor","addButtonBackground","addButtonHoverBackground","AddCardIconContainer","buttonIconBackground","AddCardIcon","buttonIconFill","CardListContainer","CardListStyled","TrackVertical","columnTrackVerticalBackground","ThumbVertical","columnThumbVerticalBackground","CardStyled","priority","color","CardTitleStyled","cardMajorText","CardDescriptionStyled","cardMinorText","CardFooter","cardDecor","CardParamsWrapper","CardParamsTitle","PriorityStatus","DeadlineDate","ToolsWrapper","ToolsButtonBell","pastDeadline","ToolsButton","StyledDiv","background","StyledContainerCardHeder","StyledBtnClose","closeModalBtn","StyledP","StyledInput","btnAddBoard","StyledTextArea","StyledTitelBtn","StyledButton","Container","RadioGroup","RadioLabel","RadioInput","checked","PlusIconContainer","plusButtonColor","StyledTitleDeadline","StyledFormikTitleNotification","btnAddColumn","StyledFormikDescriptionNotification","StyledFormikColorNotification","DatePickerContainer","calendarBackGround","calendarNumberColor","calendarSelectedColor","priorities","EditTask","columnId","closeModal","description","taskId","initialDeadline","deadline","useState","setDeadline","deadlinePickerRef","useRef","Date","editTask","console","error","formik","useFormik","formattedDeadline","moment","format","formattedDate","CurrentDate","updateDeadline","className","width","height","role","xlinkHref","value","onChange","handleChange","map","fill","current","setOpen","style","marginLeft","cursor","ref","selected","date","alert","setFieldValue","locale","dateFormat","showTimeSelect","customInput","Card","forwardRef","_id","taskData","rest","isEditModalOpen","setIsEditModalOpen","closeEditModal","handleDeleteTaskButtonClick","deleteTask","isBefore","w","h","use","Modal","onClose","selectStatusFilter","state","filters","status","CardList","cards","filteredCards","filter","droppableId","provided","droppableProps","hideTracksWhenNotNeeded","renderTrackVertical","renderThumbVertical","innerRef","owner","draggableId","dragProvided","draggableProps","dragHandleProps","toDate","AddTasks","val","addTask","Column","createdAt","isEditCardMode","setIsEditCardMode","useModal","isModalOpen","openModal","useAskDeleteModal","isAskDeleteModalOpen","openAskDeleteModal","closeAskDeleteModal","isDeleteColumn","useDeleteColumn","hasCards","handleDeleteColumnEmty","deleteColumn","Notify","handleDeleteColumnFull","handleAddCardButtonClick","AskDeleteModal","handleDelete","ColumnListStyled","ColumnList","columns","isLoading","selectIsLoading","selectError","useEffect","getColumns","Loader","onDragEnd","result","source","destination","columnsActions","sourceIndex","destinationIndex","reorder","forEach","e","i","sourceCol","destCol","sourceArr","destArr","draggableCard","find","splice","direction","CreateBoardContainer","createBoardContainerColor","CreateBoardButton","NewBoard","MainDashboardSection","MainDashboardContainer","MainDashboardSectionTitle","MainDashboardAddColumnButton","addColumnButtonColor","addColumnButtonBackground","addColumnButtonHoverBackground","MainDashboardIconContainer","iconContainerBackground","MainDashboardIcon","addColumnIconFill","FilterContainer","ContentHolder","ContentWrapper","TrackHorizontal","mainTrackHorizontalBackground","ThumbHorizontal","mainThumbHorizontalBackground","FilterButton","filterBtnColorSelected","filterBtnColor","text","filterWithoutPriorityColor","filterDecorativeElement","children","StatusFilterContainer","filterContainerBackground","filterContainerShadow","StatusFilterMainText","StatusFilterBox","StatusFilterLabel","StatusFilterShowAll","StatusFilterItem","closeModalBtnHover","options","handleFilterChange","setStatusFilter","onChangeFilterClick","statusFilters","statusText","DashboardHeaderTitle","dashboard","filterBgd","DashboardHeaderFilter","filterColor","disabled","filterShadow","DashboardHeaderText","boardName","useParams","boards","selectBoardsState","selectedBoard","board","trim","some","column","renderTrackHorizontal","renderThumbHorizontal"],"sourceRoot":""}